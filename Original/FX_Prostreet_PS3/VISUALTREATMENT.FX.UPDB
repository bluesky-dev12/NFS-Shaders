<?xml version="1.0" encoding="utf-8"?>
<shader-pdb pdbHint="4e4a0009-cb966fba-84d497de" version="6132">
 <files>
  <file id="0" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\visualtreatment.fx" time="01c7f8c7-b1106de8">///////////////////////////////////////////////////////////////////////////////
//
// Visual Treatment
//
///////////////////////////////////////////////////////////////////////////////
#include "global.h"
#include "gradient.h"
#include "visualtreatment.h"

// The FMV capture guys use this to render the depth as B&amp;W
//#define RENDER_DEPTH



///////////////////////////////////////////////////////////////////////////////






///////////////////////////////////////////////////////////////////////////////

// These defines just make the parameters more readable
#define DO_DOF(value)				value
#define DO_COLOUR_FADE(value)		value

technique visualtreatment
{
	pass p0
	{
		VertexShader = compile vs_1_1 vertex_shader_passthru();
		PixelShader	 = compile ps_3_0 PS_VisualTreatment(DO_DOF(false), DO_COLOUR_FADE(false));
	}
}

technique visualtreatment_enchanced
{
	pass p0
	{
		VertexShader = compile vs_1_1 vertex_shader_passthru();
		PixelShader	 = compile ps_3_0 PS_VisualTreatment(DO_DOF(true), DO_COLOUR_FADE(true));
	}
}


technique motionblur
{
	pass p0
	{
		VertexShader = compile vs_1_1 VS_MotionBlur();
		PixelShader	 = compile ps_3_0 PS_MotionBlur();
	}
}



technique composite_blur
{
	pass p0
	{
		VertexShader = compile vs_1_1 VS_CompositeBlur();
		PixelShader  = compile ps_3_0 PS_CompositeBlur();
	}
}



technique screen_passthru
{
	pass p0
	{
		VertexShader = compile vs_1_1 vertex_shader_passthru();
		PixelShader	 = compile ps_2_0 PS_PassThru();
	}
}
</file>
  <file id="1" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\global.h" time="01c7f8c7-b0ef0cee">#ifndef GLOBAL_H
#define GLOBAL_H

#include "registermap.h"   

// Defined out for the Xbox360 - only needed on the PC
#define DECLARE_TEXTURE(texture)	
#define ASSIGN_TEXTURE(texture)	
#define DECLARE_MINFILTER(default_filter)			 MINFILTER = default_filter;
#define DECLARE_MAGFILTER(default_filter)			 MAGFILTER = default_filter;
#define DECLARE_MIPFILTER(default_filter)			 MIPFILTER = default_filter;

/////////////////////////////////////////////////////////////////////////////////////////
float4x4	cmWorldViewProj			: REG_cmWorldViewProj; //WORLDVIEWPROJECTION ;
float4		cvScreenOffset			: REG_cvScreenOffset; //SCREENOFFSET;
float4		cvVertexPowerBrightness : REG_cvVertexPowerBrightness;

float4 world_position( float4 screen_pos )
{
 	float4 p = mul(screen_pos, cmWorldViewProj);  
	p.xy += cvScreenOffset.xy * p.w;
    return p;
}

float4 screen_position( float4 screen_pos )
{
	screen_pos.xy += cvScreenOffset.xy;
    return screen_pos;
}

float4 CalcVertexColour(float4 colour)
{
	float4 result = pow(colour, cvVertexPowerBrightness.x) * cvVertexPowerBrightness.y;
	result.w = colour.w;
	return result;
}

float3 ScaleHeadLightIntensity(float3 colour) 
{
	float3 result = colour * cvVertexPowerBrightness.z;
	return result;
}



/////////////////////////////////////////////////////////////////////////////////////////
// HDR Colour Space compression
//
// Convert to a log or psudeo-log colour space to save high dynamic range data
/////////////////////////////////////////////////////////////////////////////////////////
#define kCompressCoeff ( 1.0f )
float3 CompressColourSpace(float3 colour)
{
	return colour / (kCompressCoeff+colour);
}

float3 DeCompressColourSpace(float3 colour)
{
	return colour / (kCompressCoeff-colour);
}


/////////////////////////////////////////////////////////////////////////////////////////
// RGBE8 Encoding/Decoding
// The RGBE8 format stores a mantissa per color channel and a shared exponent 
// stored in alpha. Since the exponent is shared, it's computed based on the
// highest intensity color component. The resulting color is RGB * 2^Alpha,
// which scales the data across a logarithmic scale.
/////////////////////////////////////////////////////////////////////////////////////////

float4 EncodeRGBE8( in float3 rgb )	  
{
	float4 vEncoded;

    // Determine the largest color component
	float maxComponent = max( max(rgb.r, rgb.g), rgb.b );
	
	// Round to the nearest integer exponent
	float fExp = ceil( log2(maxComponent) );

    // Divide the components by the shared exponent
	vEncoded.rgb = rgb / exp2(fExp);
	
	// Store the shared exponent in the alpha channel
	vEncoded.a = (fExp + 128) / 255;

	return vEncoded;
}

/////////////////////////////////////////////////////////////////////////////////////////

float3 DecodeRGBE8( in float4 rgbe )
{
	float3 vDecoded;

    // Retrieve the shared exponent
	float fExp = rgbe.a * 255 - 128;
	
	// Multiply through the color components
	vDecoded = rgbe.rgb * exp2(fExp);
	
	return vDecoded;
}

/////////////////////////////////////////////////////////////////////////////////////////
#endif</file>
  <file id="2" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\registermap.h" time="01c7f8c7-b0d997bb">
// ------------------------------------------------------------------------------------------------------------------------------------------

#define CONSTANT_RESERVED_DO_NOT_USE			(0)		/* 4 vectors [c0,c3] */

// ------------------------------------------------------------------------------------------------------------------------------------------

#define REG_RESERVED_DO_NOT_USE			register(c0)	/* 4 vectors [c0,c3] */

#define REG_cmWorldMat					register(c4)	/* 4 vectors [c0,c3] */
#define REG_cmWorldMatTranspose			register(c8)	/* 4 vectors [c4,c7] */
#define REG_cmWorldView					register(c12)	/* 4 vectors [c8,c11] */
#define REG_cmShadowMapWVP				register(c16)	/* 4 vectors [c12,c15] */
#define REG_cmLightWVP					register(c20)	/* 4 vectors [c16,c19] */
#define REG_cmWorldViewProj				register(c24)	/* 4 vectors [c20,c23] */
#define REG_cmPrevWorldViewProj			register(c28)	/* 4 vectors [c24,c27] */
#define REG_cvLocalEyePos				register(c32)	/* 1 vecotr	 [c32] */
#define REG_cvLocalLightVec				register(c33)	/* 1 vecotr	 [c33] */
#define REG_cfSkyDomeRotation			register(c34)	/* 1 vecotr	 [c34] */

#define REG_cmLocalColourMatrix			register(c36)	/* 4 vectors [c36,c39] */
#define REG_cmLocalDirectionMatrix		register(c40)	/* 4 vectors [c40,c43] */
#define REG_cmLocalPositionMatrix		register(c44)	/* 4 vectors [c44,c47] */
#define REG_cavHarmonicCoeff			register(c48)	/* 10 floats, 3 vectors, 1 pad vector [48,51] */

#define REG_camBlendMatrices			register(c52)	/* 16 vectors [c52,c67] */
#define REG_cavWorldHeadlightDirection	register(c68)	/* 2 vectors [c68,c69] */
#define REG_cavWorldHeadlightPosition	register(c70)	/* 2 vectors [c70,c71] */
#define REG_cavWorldHeadlightUpDirection register(c72)	/* 2 vectors [c72,c73] */

#define REG_cmShadowMapVP				register(c68) // note clash with head light
#define REG_cmShadowMapBiasMatrix		register(c72)	/* 4 vectors [c72, c75] */



#define REG_cvWorldSunColour			register(c79)
#define REG_cvWorldAmbientColour		register(c80)

// available: [c82,c115] (but would alias cavPcaWeightsR and cavPcaWeightsG)
// PCA/UCap parameters (ucap.fx, water.fx)
#define REG_cafPcaMean					register(c81)	/* 1 vector */
#define REG_cavPcaWeightsR				register(c82)	/* 22 vectors [c82,c103] */
#define REG_cavPcaWeightsG				register(c104)	/* 22 vectors [c104,c125] */
#define REG_cavPcaWeightsB				register(c126)	/* 22 vectors [c126,c147] */
#define REG_cavPcaWeightsX				register(c148)	/* 8 vectors [c148,c155] */
#define REG_cavPcaWeightsY				register(c156)	/* 8 vectors [c156,c163] */
#define REG_cavPcaWeightsZ				register(c164)	/* 8 vectors [c164,c171] */
#define REG_cavPcaWeightsNX				register(c172)	/* 8 vectors [c172,c179] */
#define REG_cavPcaWeightsNY				register(c180)	/* 8 vectors [c180,c187] */
#define REG_cavPcaWeightsNZ				register(c188)	/* 8 vectors [c188,c195] */
#define REG_cavFeatureHeights			register(c196)	/* 1 vector */


// The following parameters alias cavPcaWeightsG:
#define REG_cfMipMapBias				register(c116)
#define REG_cfBrightness				register(c117)
#define REG_cfSurfaceReflection			register(c118)
#define REG_cfRainIntensity				register(c119)
#define REG_cfSpecularPower				register(c120)
#define REG_cfMetallicScale				register(c121)
#define REG_cfEnvmapPullAmount			register(c122)
#define REG_cfEnvmapPower				register(c123)
#define REG_PAD2						register(c125)

// The following parameters alias cavPcaWeightsB:
#define REG_cfCombinedBrightness		register(c126)
#define REG_cvVisualEffectFadeColour	register(c127)	/* also aliases cfSkyAlphaTag */
#define REG_cfSkyAlphaTag				register(c127)	/* also aliases cvVisualEffectFadeColour */
#define REG_cfShadowVolumeOffset		register(c128)
#define REG_cfRVMWorldBrightness		register(c129)
#define REG_cfDesaturation				register(c130)
#define REG_cfBloomScale				register(c131)
#define REG_cfSplitScreenUVScale		register(c132)
#define REG_cfColourCubeFilterBlend		register(c133)
#define REG_cfTimeTicker				register(c134)
#define REG_cfMiddleGray				register(c135)
#define REG_cfBrightPassThreshold		register(c136)

#define REG_cvScreenOffset				register(c137)
#define REG_cvFog_Br_Plus_Bm			register(c138)
#define REG_cvFog_One_Over_BrBm			register(c139)
#define REG_cvFog_Const_1				register(c140)
#define REG_cvFog_Const_2				register(c141)
#define REG_cvFog_Const_3				register(c142)
#define REG_cvAmbientColour				register(c143)
#define REG_cvShadowParams0				register(c144)
#define REG_cvShadowParams1				register(c145)


// The following parameters alias cavPcaWeightsX:
#define REG_cvDiffuseColour				register(c148)
#define REG_cvSpecularColour			register(c149)
// available: [c150,c155] (but would alias cavPcaWeightsX)

// The following parameters alias cavPcaWeightsY:
#define REG_cvShadowColour				register(c156)
#define REG_cvTextureOffset				register(c161)
#define REG_cvLocalCenter				register(c162)
#define REG_cvTreeParams				register(c163)

// The following parameters alias cavPcaWeightsZ:
#define REG_cvBaseAlphaRef				register(c164)
#define REG_cvCloudIntensity			register(c165)
#define REG_cvLocalLightPos				register(c166)
#define REG_cvPixelizationScale			register(c167)
#define REG_cvGrassColour				register(c169)

// The following parameters alias cavPcaWeightsNX:
#define REG_cvDepthOfFieldParams		register(c172)	/* aliases cavFeatureHeights */
#define REG_cvBlurParams				register(c173)
// The following parameters alias cavPcaWeightsNX and cavPcaWeightsNY:
#define REG_cavSampleOffsetWeights		register(c174)	/* 16 vectors [c174,c189] */

#define REG_PAD0						register(c190)	/* free space!! */

#define REG_cvFogValue					register(c206)
#define REG_cvFogColour					register(c207)
#define REG_cfSkyFogFalloff				register(c208)
#define REG_cfLightMapVertColBlend		register(c209)

#define REG_cvLightColour				register(c210)
#define REG_cvLightPosition				register(c211)

#define REG_cvLightDirection			register(c212)
#define REG_cfShadowMapEnabled			register(c213)
#define REG_cfVSMEnabled				register(c214)
#define REG_cfReceiveShadow				register(c215)

#define REG_cvVertexPowerBrightness		register(c216)

#define REG_cfFogEnable					register(c240)



// Light Material Registers - alias REG_cavLightDirections

#define REG_cvDiffuseMin				register(c228)
#define REG_cvDiffuseRange				register(c229)
#define REG_cvEnvmapMin					register(c230)
#define REG_cvEnvmapRange				register(c231)
#define REG_cvSpecularMin				register(c232)
#define REG_cvSpecularRange				register(c233)
#define REG_cvSpecular1Min				register(c234)
#define REG_cvSpecular1Range			register(c235)
#define REG_cvPowers					register(c236)
#define REG_cvClampAndScales			register(c237)
#define REG_cvFlakes					register(c238)
#define REG_cvVinylScales				register(c239)

#define	REG_cvGradientParams            register(c240)
#define	REG_cvGradientColour            register(c241)
#define	REG_cvGradientColourE           register(c242)
#define	REG_ScreenRez                  	register(c243)
#define REG_cfScaleUVs					register(c244)

// for the constants heavy shader instancing
// 4 vectors, c4 to c7
#define REG_cmInstanceVP					register(c4)
#define REG_cvInstanceData					register(c8)
#define REG_cvInstanceWorldSunPosition		register(c9)
#define REG_cvInstanceWorldSunColour		register(c10)
#define REG_cvInstanceWorldAmbientColour	register(c11)
#define REG_cvInstancedFogColour			register(c12)
#define REG_cvInstancedFogValue				register(c13)
#define REG_cvInstanceArray					register(c14)


// Aliased With Light Materials ...

#define REG_cfDrawDepthOfField			register(c230)


#define REG_ciVSMEnabled				register(c)
#define REG_ciShadowMapPCFLevel			register(c)
#define REG_ciShadowMapAlphaEnabled		register(c)
#define REG_ciDoCarShadowMap			register(c)
#define REG_cbIsParallexMapped			register(c)
#define REG_cbDecompressPCA				register(c)

#define REG_DIFFUSE_SAMPLER				register(c)
#define REG_HEIGHTMAP_SAMPLER			register(c)
#define REG_MISCMAP1_SAMPLER			register(c)
#define REG_MISCMAP2_SAMPLER			register(c)
#define REG_MISCMAP3_SAMPLER			register(c)
#define REG_MISCMAP4_SAMPLER			register(c)
#define REG_OPACITY_SAMPLER				register(c)
#define REG_VOLUMEMAP_SAMPLER			register(c)
#define REG_ENVIROMAP_SAMPLER			register(c)
#define REG_NORMALMAP_SAMPLER			register(c)
#define REG_SHADOWMAP_SAMPLER			register(c)
#define REG_SHADOWVOLUME_COLOUR			register(c)
#define REG_SPECULARMAP_SAMPLER			register(c)
#define REG_PCA_COMPONENTS0_SAMPLER		register(c)
#define REG_PCA_COMPONENTS1_SAMPLER		register(c)
#define REG_PCA_COMPONENTS2_SAMPLER		register(c)
#define REG_PCA_COMPONENTS3_SAMPLER		register(c)
#define REG_HEADLIGHT_SAMPLER			register(c)
#define REG_HEADLIGHT_CLIP_SAMPLER		register(c)
#define REG_MIPMAP_GEN_SAMPLER			register(c)





</file>
  <file id="3" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\gradient.h" time="01c7f8c7-b0f16f49">shared float4 cvGradientParams					: REG_cvGradientParams;  // SCREEN X Y  &amp; R &amp; intensity
shared float3 cvGradientColour					: REG_cvGradientColour;  // RGB
shared float3 cvGradientColourE					: REG_cvGradientColourE;  // RGB
shared float3 cvScreenRez						: REG_ScreenRez;  		// X &amp; Y res


float3 AddGradient(float3 result, float2 texCoord)
{
	float maxRad = cvGradientParams.z;   // X rad

	texCoord.y = cvGradientParams.y - ((texCoord.y - cvGradientParams.y) *  (cvGradientParams.z / cvScreenRez.z));

	float blend =  length(cvGradientParams.xy - texCoord.xy);
	blend =  (maxRad - clamp(blend, 0, maxRad))  /maxRad;

	float3 fincol = lerp(cvGradientColour.xyz, cvGradientColourE.xyz, 1-blend);
	result.xyz = blend * result.xyz  + lerp(result.xyz, (fincol.xyz * cvGradientParams.w), blend) ;

	return result.xyz;
}


</file>
  <file id="4" path="D:\eax-build1-s09-xenon\Oban\Speed\Indep\Src\Render\Shaders\visualtreatment.h" time="01c7f8bf-7e400889">#ifndef VISUALTREATMENT_H
#define VISUALTREATMENT_H

/********************************************************************

created:	2007/07/26
filename: 	Z:\Oban\Indep\Src\Render\Shaders\visualtreatment.h
file path:	Z:\Oban\Indep\Src\Render\Shaders
file base:	visualtreatment
file ext:	h
author:		mriegger

purpose:	Cross platform implementation of the visualtreatment shader

*********************************************************************/

shared float4 cvBlurParams				: REG_cvBlurParams;
// CONSTANTS

// The per-color weighting to be used for luminance	calculations in	RGB	order.
static const float3	LUMINANCE_VECTOR  =	float3(0.2125f,	0.7154f, 0.0721f);

// PARAMETERS 

shared float4 cvVisualEffectFadeColour	: REG_cvVisualEffectFadeColour;
shared float cfSplitScreenUVScale		: REG_cfSplitScreenUVScale; 

// Tone	mapping	variables
shared float cfBloomScale				: REG_cfBloomScale;

// Depth of Field variables
shared float4 cvDepthOfFieldParams		: REG_cvDepthOfFieldParams; //DEPTHOFFIELD_PARAMS;

shared float cfDrawDepthOfField			: REG_cfDrawDepthOfField;		

//shared float4 cvTextureOffset		: REG_cvTextureOffset; //TEXTUREANIMOFFSET;


/*** Forward Declarations *****************************************************************************************/


/*** Samplers *****************************************************************************************/

DECLARE_TEXTURE(DIFFUSE_TEXTURE)				// needed for the PC
sampler	DIFFUSE_SAMPLER =	sampler_state
{
	ASSIGN_TEXTURE(DIFFUSE_TEXTURE)			   // needed for the PC
	AddressU = CLAMP;
	AddressV = CLAMP;
	MIPFILTER =	NONE;
	MINFILTER =	LINEAR;
	MAGFILTER =	LINEAR;
};

DECLARE_TEXTURE(MOTIONBLUR_TEXTURE)				// needed for the PC
sampler	MOTIONBLUR_SAMPLER = sampler_state
{
	ASSIGN_TEXTURE(MOTIONBLUR_TEXTURE)			   // needed for the PC
	AddressU = CLAMP;//BORDER;
	AddressV = CLAMP;//BORDER;
	MIPFILTER =	NONE;
	MINFILTER =	LINEAR;
	MAGFILTER =	LINEAR;
};

DECLARE_TEXTURE(DEPTHBUFFER_TEXTURE)				// needed for the PC
sampler	DEPTHBUFFER_SAMPLER = sampler_state
{
	ASSIGN_TEXTURE(DEPTHBUFFER_TEXTURE)			   // needed for the PC
	AddressU = CLAMP;
	AddressV = CLAMP;
	MIPFILTER =	LINEAR;
	MINFILTER =	LINEAR;
	MAGFILTER =	LINEAR;
};

DECLARE_TEXTURE(MISCMAP2_TEXTURE)				// needed for the PC
sampler	MISCMAP2_SAMPLER = sampler_state
{
	ASSIGN_TEXTURE(MISCMAP2_TEXTURE)			   // needed for the PC
	AddressU = CLAMP;
	AddressV = WRAP;		// Use mirror for split screen so the vignette works
	MIPFILTER =	NONE;
	MINFILTER =	LINEAR;
	MAGFILTER =	LINEAR;
};

DECLARE_TEXTURE(BLOOM_TEXTURE)				// needed for the PC
sampler	BLOOM_SAMPLER = sampler_state
{
	ASSIGN_TEXTURE(BLOOM_TEXTURE)			   // needed for the PC
	AddressU = CLAMP;
	AddressV = CLAMP;
	MIPFILTER =	NONE;
	MINFILTER =	LINEAR;
	MAGFILTER =	LINEAR;
};

DECLARE_TEXTURE(MISCMAP6_TEXTURE)				// needed for the PC
sampler	MISCMAP6_SAMPLER = sampler_state
{
	ASSIGN_TEXTURE(MISCMAP6_TEXTURE)			   // needed for the PC
	AddressU = CLAMP;
	AddressV = CLAMP;
	MIPFILTER =	LINEAR;
	MINFILTER =	LINEAR;
	MAGFILTER =	LINEAR;
};

/*** Structures **************************************************************************************/

struct DepthSpriteOut
{
	float4 colour	: COLOR0;
	// Passing thru depth on the PC (1) isn't needed, (2) seems to cause visual errors on nvidia 7-series gpus
#ifndef MOTIONBLUR_DONTPASSTHRUDEPTH
	float  depth	: DEPTH0;
#endif
};

///////////////////////////////////////////////////////////////////////////////

// should pack these two, reduce input bandwidth.   may not be significant
struct VS_INPUT_SCREEN
{
	float4 position	: POSITION;
	float4 tex0		: TEXCOORD0;
};

struct VtoP
{
	float4 position		: POSITION;
	float4 tex0			: TEXCOORD0;
};

VtoP vertex_shader_passthru(const VS_INPUT_SCREEN IN)
{
	VtoP OUT;
	OUT.position = IN.position;
	OUT.tex0	= IN.tex0;
	return OUT;
}

///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Motion Blur
//
struct VS_INPUT_MOTIONBLUR
{
	float4 position	: POSITION;
	float4 tex0		: TEXCOORD0;
	float4 tex1		: TEXCOORD1;
	float4 tex2		: TEXCOORD2;
	float4 tex3		: TEXCOORD3;
	float4 tex4		: TEXCOORD4;
	float4 tex5		: TEXCOORD5;
	float4 tex6		: TEXCOORD6;
	float4 tex7		: TEXCOORD7;
};

struct VtoP_MOTIONBLUR
{
	float4 position		: POSITION;
	float2 tex[8]		: TEXCOORD0;
};

/*** Functions ***************************************************************************************/

VtoP_MOTIONBLUR VS_MotionBlur(const VS_INPUT_MOTIONBLUR IN)
{
	VtoP_MOTIONBLUR OUT;
	OUT.position = IN.position;
	OUT.tex[0] = IN.tex0.xy;
	OUT.tex[1] = IN.tex1.xy;
	OUT.tex[2] = IN.tex2.xy;
	OUT.tex[3] = IN.tex3.xy;
	OUT.tex[4] = IN.tex4.xy;
	OUT.tex[5] = IN.tex5.xy;
	OUT.tex[6] = IN.tex6.xy;
	OUT.tex[7] = IN.tex7.xy;
	return OUT;
}


///////////////////////////////////////////////////////////////////////////////

const float kWeights[8] = { 6, 5, 4, 3, 2, 1, 1, 1 };
float4 PS_MotionBlur(const VtoP_MOTIONBLUR IN) : COLOR 
{
	//float rampCoeff = cvBlurParams.x;
	float4	result = 0;

	// compute motion blurred image
	for(int i=0; i &lt; 8; i++)
	{
		float4 blur = tex2D( MOTIONBLUR_SAMPLER, IN.tex[i]);
		//float3 ramp = blur.xyz / (rampCoeff - blur.xyz);	// ramp
		//blur.xyz = max(blur.xyz, ramp);									// don't want to darken the image
		//result += blur;// * (weights[i] / 16);
		result += blur * (kWeights[i] / 23.0f);
	}
	//result /= 8;

	//return tex2D( MOTIONBLUR_SAMPLER, IN.tex[0]);

	return result;
}

// --------------------------------------------------------------------------------------------------

VtoP VS_CompositeBlur(const VS_INPUT_SCREEN IN)
{
	VtoP OUT;
	OUT.position = IN.position;
	OUT.tex0	= IN.tex0;
	return OUT;
}


DepthSpriteOut PS_CompositeBlur(const VtoP IN)
{
	DepthSpriteOut OUT;

	float4 screen = tex2D( DIFFUSE_SAMPLER, IN.tex0.xy );
	float4 blur   = tex2D( MOTIONBLUR_SAMPLER, IN.tex0.xy );

	float senseOfSpeedScale = cvBlurParams.x; // 0 travelling slow, 1 travelling fast
	OUT.colour.xyz = lerp(screen.xyz, blur.xyz, blur.w*senseOfSpeedScale);
	OUT.colour.w = screen.w;
#ifndef MOTIONBLUR_DONTPASSTHRUDEPTH
	OUT.depth  = tex2D( DEPTHBUFFER_SAMPLER, IN.tex0.xy).x;
#endif

	//OUT.colour = blur;

	return OUT;
}

// --------------------------------------------------------------------------------------------------
float4 PS_PassThru(const VtoP IN) : COLOR
{
	float4 OUT;

	float4 diffuse = tex2D(DIFFUSE_SAMPLER, IN.tex0.xy);	// * IN;

	OUT.xyz	= diffuse;

	OUT.w =	diffuse.w;

	return OUT;
}



///////////////////////////////////////////////////////////////////////////////////////////////////
// Depth Of Field
//
// The blurred texture in sampler contains multiple mipmap levels
// representing different blurred intensities of the back buffer.
// The result colour passed in is the shape in focus representation
// of the image.  Use the zDepth, focal Distance and depth of field to
// compute a blurred amount between 0 and 1.  Multiple this by the max
// blur (max blur is between 1 and 3 because there are 3 mip map levels)
// to yeild which Mip level to bias to.  Then lerp between the sharp 
// image and blurred image.  This should give us a nice transition between
// 4 textures that representing different stages of depth

float4 DoDepthOfField(const VtoP IN, in float4 result, float depth)
{
	float zDist			= (1 / (1-depth));
	float focalDist		= cvDepthOfFieldParams.x;
	float depthOfField	= cvDepthOfFieldParams.y;
	float falloff		= cvDepthOfFieldParams.z;
	float maxBlur		= cvDepthOfFieldParams.w;
	float blur			= saturate((abs(zDist-focalDist)-depthOfField)*falloff/zDist);
	float mipLevel		= blur*maxBlur;
	float3 blurredTex	= tex2Dbias( MISCMAP6_SAMPLER,  float4(IN.tex0.xy, 0, mipLevel) );
	result				= float4(lerp(result.xyz, blurredTex, saturate(mipLevel)), result.w); 

	//result.xyz = saturate((abs(zDist-50)-30)*falloff/zDist);
	if( cfDrawDepthOfField &gt; 0.0f)
	{
		result.x += (1-blur)*0.3;						// draw the depth of field falloff
		result.xyz += ( blur == 0.0f ) ? 0.5 : 0.0f;	// draw the crital focal point
	}

	return result;
}


float4 PS_VisualTreatment(const VtoP IN, uniform bool doDepthOfField, uniform bool doColourFade) : COLOR 
{
	float4	result;

	// Full screen image
	//
	float4 screenTex = tex2D( DIFFUSE_SAMPLER, IN.tex0.xy );
	result = screenTex;

	float depth	= tex2D( DEPTHBUFFER_SAMPLER, IN.tex0.xy ).x;

	//
	// Do Depth of Field
	//
#ifndef DONTDODEPTH
	if( doDepthOfField )	// Compile time branch is optimized out
	{
		result = DoDepthOfField(IN, result, depth);
	}
#endif


	// Convert from log space to linear space and clamp[0,1]
	result.xyz = saturate(DeCompressColourSpace(result.xyz));

	// HDR Bloom buffer


	float3 Bloom = cfBloomScale * pow(tex2D( BLOOM_SAMPLER, IN.tex0.xy ),1.8) ;

	result.xyz =  (1 - ( 1- saturate(2*Bloom))*(1-result.xyz) );  //SCREEN TO GLOW BRIGHT AREAS

	result.xyz += Bloom*0.4; //ADD 



	// Allow the NIS's to fade to a colour
	//
	if( doColourFade )		// Compile time branch is optimized out
	{
		result.xyz = lerp(result.xyz, cvVisualEffectFadeColour.xyz, cvVisualEffectFadeColour.w);
	}

	// Lens contamination gradient effect 
	//
	result.xyz = AddGradient(result, IN.tex0.xy);


	// Depth of Field FMV capture stuff
	//
#ifdef RENDER_DEPTH	
	float zDist	= (1 / (1-depth));
	result.xyz = (zDist*0.5) / 100;
#endif

	//result.xyz = screenTex.xyz;

	return result;
}


#endif
</file>
 </files>
 <tool name="FXLite">
  <defines>
   <define name="PLAT_XENON" value="" />
  </defines>
  <arguments>
   <argument name="/Zi" value="false" />
   <argument name="/Vd" value="false" />
   <argument name="/Xu0_deprecated" value="false" />
   <argument name="/Odu_deprecated" value="false" />
   <argument name="/XOd_" value="false" />
   <argument name="/XOu" value="false" />
   <argument name="/Xmaxtempreg" value="0" />
   <argument name="PsSampBase" value="0" />
   <argument name="PsSampCount" value="0" />
   <argument name="VsSampBase" value="0" />
   <argument name="VsSampCount" value="0" />
   <argument name="VsInstCount" value="0" />
   <argument name="PsInstCount" value="0" />
   <argument name="/Od" value="false" />
   <argument name="/Zpr" value="false" />
   <argument name="/Zpc" value="false" />
   <argument name="/Gpp" value="false" />
   <argument name="/Op" value="false" />
   <argument name="/Gfa" value="false" />
   <argument name="/Gfp" value="false" />
   <argument name="/XZc:zeroInit" value="false" />
   <argument name="/XVe" value="false" />
   <argument name="/Xbe:3-" value="false" />
   <argument name="/Xbe:1-" value="false" />
   <argument name="/XQInomaskedexports" value="false" />
   <argument name="/XOautoz" value="false" />
   <argument name="/XfxAv" value="false" />
   <argument name="/XfxAs" value="false" />
   <argument name="/XfxPv" value="false" />
  </arguments>
 </tool>
 <shaders>
  <shader entrypoint="PS_PassThru" target="ps_3_0" FxlTechniqueName="visualtreatment" FxlTechnique="4" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0000-cb966fba-84d497de">
   <constanttable>
    <constant register="s0">
     <type name="DIFFUSE_SAMPLER" class="object" type="sampler2D" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="2" file="4" line="244" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="4" line="244" scope="-1" lastinstruction="0" />
    <statement pc="3" file="4" line="250" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="vertex_shader_passthru" target="vs_3_0" FxlTechniqueName="visualtreatment" FxlTechnique="4" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0001-cb966fba-84d497de">
   <constanttable>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="4" line="136" scope="-1" lastinstruction="0" />
    <statement pc="4" file="4" line="136" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="4" line="136" scope="-1" lastinstruction="0" />
    <statement pc="5" file="4" line="141" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="4" line="141" scope="-1" lastinstruction="0" />
    <statement pc="6" file="4" line="141" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="1" DestSwizzle="xyzw" Semantic="0x00" End="false" />
    <vfetch Address="4" Register="0" DestSwizzle="xyzw" Semantic="0x50" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PS_CompositeBlur" target="ps_3_0" FxlTechniqueName="visualtreatment_enchanced" FxlTechnique="3" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0002-cb966fba-84d497de">
   <constanttable>
    <constant register="s2">
     <type name="DEPTHBUFFER_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="s0">
     <type name="DIFFUSE_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="s1">
     <type name="MOTIONBLUR_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="c173">
     <type name="cvBlurParams" class="vector" type="float" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="2" file="4" line="225" scope="-1" lastinstruction="0" />
    <statement pc="3" file="4" line="224" scope="-1" lastinstruction="0" />
    <statement pc="4" file="4" line="231" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="4" line="231" scope="-1" lastinstruction="0" />
    <statement pc="5" file="4" line="236" scope="-1" lastinstruction="0" />
    <statement pc="6" file="4" line="236" scope="-1" lastinstruction="0" />
    <statement pc="7" file="4" line="228" scope="-1" lastinstruction="0" />
    <statement pc="8" file="4" line="228" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VS_CompositeBlur" target="vs_3_0" FxlTechniqueName="visualtreatment_enchanced" FxlTechnique="3" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0003-cb966fba-84d497de">
   <constanttable>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="4" line="211" scope="-1" lastinstruction="0" />
    <statement pc="4" file="4" line="211" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="4" line="211" scope="-1" lastinstruction="0" />
    <statement pc="5" file="4" line="216" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="4" line="216" scope="-1" lastinstruction="0" />
    <statement pc="6" file="4" line="216" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="1" DestSwizzle="xyzw" Semantic="0x00" End="false" />
    <vfetch Address="4" Register="0" DestSwizzle="xyzw" Semantic="0x50" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PS_MotionBlur" target="ps_3_0" FxlTechniqueName="motionblur" FxlTechnique="2" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0004-cb966fba-84d497de">
   <constanttable>
    <constant register="s0">
     <type name="MOTIONBLUR_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="c0" count="8">
     <type name="kWeights" class="scalar" type="float" elements="8" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="4" line="196" scope="-1" lastinstruction="0" />
    <statement pc="4" file="4" line="196" scope="-1" lastinstruction="0" />
    <statement pc="5" file="4" line="196" scope="-1" lastinstruction="0" />
    <statement pc="6" file="4" line="196" scope="-1" lastinstruction="0" />
    <statement pc="7" file="4" line="196" scope="-1" lastinstruction="0" />
    <statement pc="8" file="4" line="196" scope="-1" lastinstruction="0" />
    <statement pc="9" file="4" line="196" scope="-1" lastinstruction="0" />
    <statement pc="10" file="4" line="196" scope="-1" lastinstruction="0" />
    <statement pc="1.0" file="4" line="196" scope="-1" lastinstruction="0" />
    <statement pc="11" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="12" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="13" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="14" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="15" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="16" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="17" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="18" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="19" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="20" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="21" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="22" file="4" line="200" scope="-1" lastinstruction="0" />
    <statement pc="23" file="4" line="200" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xy" />
    <Interpolator Register="1" Semantic="0x51" Mask="xy" />
    <Interpolator Register="2" Semantic="0x52" Mask="xy" />
    <Interpolator Register="3" Semantic="0x53" Mask="xy" />
    <Interpolator Register="4" Semantic="0x54" Mask="xy" />
    <Interpolator Register="5" Semantic="0x55" Mask="xy" />
    <Interpolator Register="6" Semantic="0x56" Mask="xy" />
    <Interpolator Register="7" Semantic="0x57" Mask="xy" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="255" value0="0.043478262" value1="0" value2="0" value3="0" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VS_MotionBlur" target="vs_3_0" FxlTechniqueName="motionblur" FxlTechnique="2" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0005-cb966fba-84d497de">
   <constanttable>
   </constanttable>
   <sourcemap>
    <statement pc="4" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="5" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="6" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="7" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="8" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="9" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="10" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="11" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="12" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="1.0" file="4" line="169" scope="-1" lastinstruction="0" />
    <statement pc="13" file="4" line="181" scope="-1" lastinstruction="0" />
    <statement pc="2.0" file="4" line="181" scope="-1" lastinstruction="0" />
    <statement pc="14" file="4" line="181" scope="-1" lastinstruction="0" />
    <statement pc="15" file="4" line="181" scope="-1" lastinstruction="0" />
    <statement pc="16" file="4" line="181" scope="-1" lastinstruction="0" />
    <statement pc="17" file="4" line="181" scope="-1" lastinstruction="0" />
    <statement pc="18" file="4" line="181" scope="-1" lastinstruction="0" />
    <statement pc="19" file="4" line="181" scope="-1" lastinstruction="0" />
    <statement pc="20" file="4" line="181" scope="-1" lastinstruction="0" />
    <statement pc="21" file="4" line="181" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="4" Register="4" DestSwizzle="xyzw" Semantic="0x00" End="false" />
    <vfetch Address="5" Register="3" DestSwizzle="__xy" Semantic="0x50" End="false" />
    <vfetch Address="6" Register="3" DestSwizzle="xy__" Semantic="0x51" End="false" />
    <vfetch Address="7" Register="2" DestSwizzle="__xy" Semantic="0x52" End="false" />
    <vfetch Address="8" Register="2" DestSwizzle="xy__" Semantic="0x53" End="false" />
    <vfetch Address="9" Register="1" DestSwizzle="__xy" Semantic="0x54" End="false" />
    <vfetch Address="10" Register="1" DestSwizzle="xy__" Semantic="0x55" End="false" />
    <vfetch Address="11" Register="0" DestSwizzle="__xy" Semantic="0x56" End="false" />
    <vfetch Address="12" Register="0" DestSwizzle="xy__" Semantic="0x57" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xy" />
    <Interpolator Register="1" Semantic="0x51" Mask="xy" />
    <Interpolator Register="2" Semantic="0x52" Mask="xy" />
    <Interpolator Register="3" Semantic="0x53" Mask="xy" />
    <Interpolator Register="4" Semantic="0x54" Mask="xy" />
    <Interpolator Register="5" Semantic="0x55" Mask="xy" />
    <Interpolator Register="6" Semantic="0x56" Mask="xy" />
    <Interpolator Register="7" Semantic="0x57" Mask="xy" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PS_VisualTreatment" target="ps_3_0" FxlTechniqueName="composite_blur" FxlTechnique="1" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0006-cb966fba-84d497de">
   <constanttable>
    <constant register="s2">
     <type name="BLOOM_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="s1">
     <type name="DEPTHBUFFER_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="s0">
     <type name="DIFFUSE_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="s3">
     <type name="MISCMAP6_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="c131">
     <type name="cfBloomScale" class="scalar" type="float" />
    </constant>
    <constant register="c230">
     <type name="cfDrawDepthOfField" class="scalar" type="float" />
    </constant>
    <constant register="c172">
     <type name="cvDepthOfFieldParams" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c241">
     <type name="cvGradientColour" class="vector" type="float" columns="3" />
    </constant>
    <constant register="c242">
     <type name="cvGradientColourE" class="vector" type="float" columns="3" />
    </constant>
    <constant register="c240">
     <type name="cvGradientParams" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c243">
     <type name="cvScreenRez" class="vector" type="float" columns="3" />
    </constant>
    <constant register="c127">
     <type name="cvVisualEffectFadeColour" class="vector" type="float" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="6" file="4" line="300" scope="-1" lastinstruction="0" />
    <statement pc="7" file="4" line="270" scope="-1" lastinstruction="0" />
    <statement pc="8" file="4" line="275" scope="-1" lastinstruction="0" />
    <statement pc="9" file="4" line="275" scope="-1" lastinstruction="0" />
    <statement pc="10" file="4" line="275" scope="-1" lastinstruction="0" />
    <statement pc="11" file="4" line="275" scope="-1" lastinstruction="0" />
    <statement pc="12" file="4" line="276" scope="-1" lastinstruction="0" />
    <statement pc="13" file="4" line="277" scope="-1" lastinstruction="0" />
    <statement pc="14" file="4" line="277" scope="-1" lastinstruction="0" />
    <statement pc="15" file="4" line="297" scope="-1" lastinstruction="0" />
    <statement pc="16" file="4" line="278" scope="-1" lastinstruction="0" />
    <statement pc="17" file="4" line="278" scope="-1" lastinstruction="0" />
    <statement pc="18" file="4" line="278" scope="-1" lastinstruction="0" />
    <statement pc="19" file="4" line="284" scope="-1" lastinstruction="0" />
    <statement pc="20" file="4" line="284" scope="-1" lastinstruction="0" />
    <statement pc="21" file="4" line="284" scope="-1" lastinstruction="0" />
    <statement pc="22" file="4" line="284" scope="-1" lastinstruction="0" />
    <statement pc="23" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="2.1" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="24" file="3" line="14" scope="-1" lastinstruction="0" />
    <statement pc="25" file="3" line="11" scope="-1" lastinstruction="0" />
    <statement pc="26" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="27" file="3" line="11" scope="-1" lastinstruction="0" />
    <statement pc="28" file="1" line="59" scope="-1" lastinstruction="0" />
    <statement pc="29" file="3" line="11" scope="-1" lastinstruction="0" />
    <statement pc="30" file="3" line="11" scope="-1" lastinstruction="0" />
    <statement pc="31" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="32" file="3" line="16" scope="-1" lastinstruction="0" />
    <statement pc="33" file="3" line="13" scope="-1" lastinstruction="0" />
    <statement pc="34" file="3" line="13" scope="-1" lastinstruction="0" />
    <statement pc="35" file="3" line="13" scope="-1" lastinstruction="0" />
    <statement pc="36" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="37" file="3" line="14" scope="-1" lastinstruction="0" />
    <statement pc="38" file="4" line="321" scope="-1" lastinstruction="0" />
    <statement pc="39" file="1" line="59" scope="-1" lastinstruction="0" />
    <statement pc="40" file="3" line="14" scope="-1" lastinstruction="0" />
    <statement pc="41" file="3" line="16" scope="-1" lastinstruction="0" />
    <statement pc="42" file="3" line="16" scope="-1" lastinstruction="0" />
    <statement pc="43" file="4" line="321" scope="-1" lastinstruction="0" />
    <statement pc="44" file="4" line="323" scope="-1" lastinstruction="0" />
    <statement pc="45" file="4" line="331" scope="-1" lastinstruction="0" />
    <statement pc="46" file="4" line="331" scope="-1" lastinstruction="0" />
    <statement pc="47" file="3" line="17" scope="-1" lastinstruction="0" />
    <statement pc="48" file="3" line="17" scope="-1" lastinstruction="0" />
    <statement pc="49" file="3" line="17" scope="-1" lastinstruction="0" />
    <statement pc="50" file="4" line="348" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="1.8" value2="0" value3="0" />
    <Float Register="255" value0="0.5" value1="0.30000001" value2="0.40000001" value3="1" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="vertex_shader_passthru" target="vs_3_0" FxlTechniqueName="composite_blur" FxlTechnique="1" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0007-cb966fba-84d497de">
   <constanttable>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="4" line="136" scope="-1" lastinstruction="0" />
    <statement pc="4" file="4" line="136" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="4" line="136" scope="-1" lastinstruction="0" />
    <statement pc="5" file="4" line="141" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="4" line="141" scope="-1" lastinstruction="0" />
    <statement pc="6" file="4" line="141" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="1" DestSwizzle="xyzw" Semantic="0x00" End="false" />
    <vfetch Address="4" Register="0" DestSwizzle="xyzw" Semantic="0x50" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PS_VisualTreatment" target="ps_3_0" FxlTechniqueName="screen_passthru" FxlTechnique="0" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0008-cb966fba-84d497de">
   <constanttable>
    <constant register="s1">
     <type name="BLOOM_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="s0">
     <type name="DIFFUSE_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="c131">
     <type name="cfBloomScale" class="scalar" type="float" />
    </constant>
    <constant register="c241">
     <type name="cvGradientColour" class="vector" type="float" columns="3" />
    </constant>
    <constant register="c242">
     <type name="cvGradientColourE" class="vector" type="float" columns="3" />
    </constant>
    <constant register="c240">
     <type name="cvGradientParams" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c243">
     <type name="cvScreenRez" class="vector" type="float" columns="3" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="4" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="5" file="4" line="297" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="4" line="297" scope="-1" lastinstruction="0" />
    <statement pc="6" file="3" line="11" scope="-1" lastinstruction="0" />
    <statement pc="7" file="4" line="348" scope="-1" lastinstruction="0" />
    <statement pc="8" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="9" file="3" line="13" scope="-1" lastinstruction="0" />
    <statement pc="10" file="1" line="59" scope="-1" lastinstruction="0" />
    <statement pc="11" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="12" file="3" line="11" scope="-1" lastinstruction="0" />
    <statement pc="13" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="14" file="3" line="16" scope="-1" lastinstruction="0" />
    <statement pc="15" file="3" line="11" scope="-1" lastinstruction="0" />
    <statement pc="16" file="1" line="59" scope="-1" lastinstruction="0" />
    <statement pc="17" file="4" line="319" scope="-1" lastinstruction="0" />
    <statement pc="18" file="3" line="11" scope="-1" lastinstruction="0" />
    <statement pc="19" file="4" line="321" scope="-1" lastinstruction="0" />
    <statement pc="20" file="3" line="13" scope="-1" lastinstruction="0" />
    <statement pc="21" file="3" line="13" scope="-1" lastinstruction="0" />
    <statement pc="22" file="4" line="321" scope="-1" lastinstruction="0" />
    <statement pc="23" file="3" line="14" scope="-1" lastinstruction="0" />
    <statement pc="24" file="3" line="14" scope="-1" lastinstruction="0" />
    <statement pc="25" file="3" line="14" scope="-1" lastinstruction="0" />
    <statement pc="26" file="3" line="16" scope="-1" lastinstruction="0" />
    <statement pc="27" file="3" line="16" scope="-1" lastinstruction="0" />
    <statement pc="28" file="4" line="321" scope="-1" lastinstruction="0" />
    <statement pc="29" file="4" line="323" scope="-1" lastinstruction="0" />
    <statement pc="30" file="3" line="17" scope="-1" lastinstruction="0" />
    <statement pc="31" file="3" line="17" scope="-1" lastinstruction="0" />
    <statement pc="32" file="3" line="17" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="255" value0="0.40000001" value1="0" value2="1" value3="1.8" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="vertex_shader_passthru" target="vs_3_0" FxlTechniqueName="screen_passthru" FxlTechnique="0" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0009-cb966fba-84d497de">
   <constanttable>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="4" line="136" scope="-1" lastinstruction="0" />
    <statement pc="4" file="4" line="136" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="4" line="136" scope="-1" lastinstruction="0" />
    <statement pc="5" file="4" line="141" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="4" line="141" scope="-1" lastinstruction="0" />
    <statement pc="6" file="4" line="141" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PS_VisualTreatment" retID="112">
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
    </function>
    <function id="1" name="DoDepthOfField" retID="100">
     <parameter id="97" />
     <parameter id="98" />
     <parameter id="99" />
    </function>
    <function id="2" name="PS_PassThru" retID="94">
     <parameter id="93" />
    </function>
    <function id="3" name="PS_CompositeBlur" retID="88">
     <parameter id="87" />
    </function>
    <function id="4" name="VS_CompositeBlur" retID="85">
     <parameter id="84" />
    </function>
    <function id="5" name="PS_MotionBlur" retID="80">
     <parameter id="79" />
    </function>
    <function id="6" name="VS_MotionBlur" retID="76">
     <parameter id="75" />
    </function>
    <function id="7" name="vertex_shader_passthru" retID="60">
     <parameter id="59" />
    </function>
    <function id="8" name="AddGradient" retID="33">
     <parameter id="31" />
     <parameter id="32" />
    </function>
    <function id="9" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="10" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="11" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="12" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="13" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="14" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="15" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="16" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="1" DestSwizzle="xyzw" Semantic="0x00" End="false" />
    <vfetch Address="4" Register="0" DestSwizzle="xyzw" Semantic="0x50" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
 </shaders>
</shader-pdb>
