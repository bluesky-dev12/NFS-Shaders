<?xml version="1.0" encoding="utf-8"?>
<shader-pdb pdbHint="4e4a0010-6b553547-cf76c564" version="6132">
 <files>
  <file id="0" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\roadreflect.fx" time="01c7f8c7-b0faf8b5">#define ENABLE_FOG
//#define REFLECTION
#include "road.h"

PS_INPUT VertexShaderMain(const VS_INPUT IN)
{
	return RoadVertexShader(IN);
}


float4 PixelShaderMain(const PS_INPUT IN) : COLOR0
{
	return RoadPixelShader(IN);
}

technique main
{
    pass p0
    {
        VertexShader = compile vs_2_0 VertexShaderMain();
        PixelShader  = compile ps_2_0 PixelShaderMain();
    }
}



///////////////////////////////////////////////////////////////////////////////
//
// LOW LOD SHADER
//
//

struct VS_INPUT_LOWLOD
{
	float4 position : POSITION;
	float4 normal	: NORMAL;
	float4 color    : COLOR;
	float2 tex		: TEXCOORD0;
};

struct PS_INPUT_LOWLOD
{
	float4 position		: POSITION;
	float2 t0			: TEXCOORD0;	// xy = texcord,	z = vertex
};

PS_INPUT_LOWLOD VertexShaderLowLOD(const VS_INPUT_LOWLOD IN)
{
	PS_INPUT_LOWLOD OUT;
	OUT.position	= world_position(IN.position);
	OUT.t0.xy = IN.tex + cvTextureOffset;

	return OUT;
}

float4 PixelShaderLowLOD(const PS_INPUT_LOWLOD IN) : COLOR0
{
	float4 OUT;
	OUT	= tex2D(ROADBASE_SAMPLER, IN.t0.xy);

	//OUT.xyz = pow(OUT.xyz, cvVertexPowerBrightness.x) * cvVertexPowerBrightness.y;
	OUT.xyz *= cvVertexPowerBrightness.y;
	OUT.xyz = CompressColourSpace(OUT.xyz);
	//OUT.xyz = 0;
	//base = 1;
	return OUT;
}

technique lowlod
{
    pass p0
    {

        VertexShader = compile vs_1_1 VertexShaderLowLOD();
        PixelShader  = compile ps_2_0 PixelShaderLowLOD();
    }
}

#include "ZPrePass_fx.h"
#include "shadowmap_fx.h"
</file>
  <file id="1" path="D:\eax-build1-s09-xenon\Oban\Speed\Indep\Src\Render\Shaders\road.h" time="01c7f8bf-7e3da62e">/********************************************************************

	created:	2007/06/12
	created:	12:6:2007   12:25
	filename: 	E:\Oban\Indep\Src\Render\Shaders\road.h
	file path:	E:\Oban\Indep\Src\Render\Shaders
	file base:	road
	file ext:	h
	author:		coconnor
	
	purpose:	Cross platform implementation of the multi-layered NFS road shader

*********************************************************************/

#ifndef ROAD_H
#define ROAD_H

#include "global.h"
#include "shadowenum.h"

//#define DETAILMAP
//#define DISABLE_SHADOW
//
// Cross platform declarations
//
shared float4x4	cmWorldView				: REG_cmWorldView;
shared float4x4	cmWorldMat				: REG_cmWorldMat;
shared float4		cvTextureOffset			: REG_cvTextureOffset;

shared float4		cvLocalLightVec			: REG_cvLocalLightVec;
shared float3		cvLocalEyePos			: REG_cvLocalEyePos;


// We don't use the DECLARE_MAG/MIN/MIPFILTER and similar macros here, those are for every shader but the road. 
// DECLARE_MAG/MIN/MIPFILTER never goes to anisotropic, its capped on the pc to be either bilinear or trilinear
// This is because there is very little visual difference on applying the
// expensive anisotropic filtering on things like the cars and trees. Anisotropic filtering makes a very large visual difference
// on the roads however, adding a ton of detail even in the front-end. 
#ifdef PLAT_PC 
// Default max anisotropy is 1 
shared int ciRoadMaxAnisotropy = 1;

// 2 is the default (linear). overridden on the pc based upoon
shared int ciRoadMipFilter = 2;
shared int ciRoadMagFilter = 2;
shared int ciRoadMinFilter = 2;

#define DECLARE_ROAD_MINFILTER(default_filter)				MINFILTER = ciRoadMinFilter;
#define DECLARE_ROAD_MAGFILTER(default_filter)				MAGFILTER = ciRoadMagFilter;
#define DECLARE_ROAD_MIPFILTER(default_filter)				MIPFILTER = ciRoadMipFilter;
#define DECLARE_ROAD_MAXANISOTROPY(default_maxanisotropy)	MAXANISOTROPY = ciRoadMaxAnisotropy;

#else

#define DECLARE_ROAD_MINFILTER(default_filter)				MINFILTER = default_filter;
#define DECLARE_ROAD_MAGFILTER(default_filter)				MAGFILTER = default_filter;
#define DECLARE_ROAD_MIPFILTER(default_filter)				MIPFILTER = default_filter;
#define DECLARE_ROAD_MAXANISOTROPY(default_maxanisotropy)	

#endif



// 
// Cross platform includes
//
#include "fog.h"
#include "lighting_models.h"
#include "pcavertexcolours.h"
//
// Input/Output Structure Declarations
//

struct VS_INPUT
{
	float4 position		: POSITION;
	float4 color		: COLOR;
	float3 normal		: NORMAL;
	float4 tex			: TEXCOORD0;
	float4 tex1			: TEXCOORD1;
	float4 tex2			: TEXCOORD2;
	float4 component0	: TEXCOORD3;
};

struct PS_INPUT
{
	float4 position			: POSITION;
	float3 amboccl_alpha	: COLOR0;
	float4 tex01			: TEXCOORD0;	// xy = tex0, zw = tex1
	float3 tex23_shadow_fade: TEXCOORD1;	// xy = tex2, z = shadow edge attenuation
	float4 normal_ndotl		: TEXCOORD2;
	float3 view_world		: TEXCOORD3;
#ifndef DISABLE_SHADOW
	float4 shadow_input		: TEXCOORD4;
#endif
#ifdef REFLECTION
	float4 reflection_tex	: TEXCOORD6;
#endif
};


//
// Samplers
//



DECLARE_TEXTURE(ROADBASE_TEXTURE)				// needed for the PC
sampler ROADBASE_SAMPLER = sampler_state 
{
	ASSIGN_TEXTURE(ROADBASE_TEXTURE)			// needed for the PC
	AddressU = WRAP;
	AddressV = WRAP;
	DECLARE_ROAD_MINFILTER(LINEAR)
	DECLARE_ROAD_MAGFILTER(LINEAR)
	DECLARE_ROAD_MIPFILTER(LINEAR)
	DECLARE_ROAD_MAXANISOTROPY(1)
};

DECLARE_TEXTURE(ROADELEMENTS_TEXTURE)			// needed for the PC
sampler ROADELEMENTS_SAMPLER = sampler_state
{
	ASSIGN_TEXTURE(ROADELEMENTS_TEXTURE)		// needed for the PC
	AddressU = CLAMP;
	AddressV = WRAP;
	DECLARE_ROAD_MINFILTER(LINEAR)
	DECLARE_ROAD_MAGFILTER(LINEAR)
	DECLARE_ROAD_MIPFILTER(LINEAR)
	DECLARE_ROAD_MAXANISOTROPY(1)
};


#ifdef TUNNEL
DECLARE_TEXTURE(LIGHTMAP_TEXTURE)				// needed for the PC
sampler LIGHTMAP_SAMPLER = sampler_state 
{
	ASSIGN_TEXTURE(LIGHTMAP_TEXTURE)			// needed for the PC
	AddressU = WRAP;
	AddressV = WRAP;
	DECLARE_ROAD_MINFILTER(LINEAR)
	DECLARE_ROAD_MAGFILTER(LINEAR)
	DECLARE_ROAD_MIPFILTER(LINEAR)
	DECLARE_ROAD_MAXANISOTROPY(1)
};
#else
DECLARE_TEXTURE(ROADDAMAGE_TEXTURE)				// needed for the PC
sampler ROADDAMAGE_SAMPLER = sampler_state
{
	ASSIGN_TEXTURE(ROADDAMAGE_TEXTURE)			// needed for the PC
	AddressU = WRAP;
	AddressV = WRAP;
	DECLARE_ROAD_MINFILTER(LINEAR)
	DECLARE_ROAD_MAGFILTER(LINEAR)
	DECLARE_ROAD_MIPFILTER(LINEAR)
	DECLARE_ROAD_MAXANISOTROPY(1)
};

#endif

#ifdef DETAILMAP
DECLARE_TEXTURE(DETAILMAP_TEXTURE)				// needed for the PC
sampler DETAILMAP_SAMPLER = sampler_state 
{
	ASSIGN_TEXTURE(DETAILMAP_TEXTURE)			// needed for the PC
	AddressU = WRAP;
	AddressV = WRAP;
	DECLARE_ROAD_MINFILTER(LINEAR)
	DECLARE_ROAD_MAGFILTER(LINEAR)
	DECLARE_ROAD_MIPFILTER(LINEAR)
	DECLARE_ROAD_MAXANISOTROPY(1)
};
#endif

#ifdef REFLECTION
DECLARE_TEXTURE(REFLECTION_TEXTURE)				// needed for the PC
sampler REFLECTION_SAMPLER = sampler_state 
{
	ASSIGN_TEXTURE(REFLECTION_TEXTURE)			// needed for the PC
	AddressU = CLAMP;
	AddressV = CLAMP;
	DECLARE_ROAD_MINFILTER(LINEAR)
	DECLARE_ROAD_MAGFILTER(LINEAR)
	DECLARE_ROAD_MIPFILTER(LINEAR)
	DECLARE_ROAD_MAXANISOTROPY(1)
};
#endif

#include "shadowmap_fx_def.h"


// Needed for shadow mapping that assumes a DIFFUSE_SAMPLER is defined
#define DIFFUSE_SAMPLER ROADBASE_SAMPLER


//
// Vertex and Pixel Shader Functionality
//

PS_INPUT RoadVertexShader(const VS_INPUT IN)
{
	PS_INPUT OUT;

	OUT.position		= world_position(IN.position);
	OUT.view_world		= cvLocalEyePos.xyz - IN.position.xyz; // by default road in world space
//	OUT.position_obj	= IN.position.xyz;
	OUT.tex01.xy		= IN.tex.xy;
	OUT.tex01.zw		= IN.tex1.xy;
	OUT.tex23_shadow_fade.xy	= IN.tex2.xy;
	OUT.amboccl_alpha.x	= pow(PcaDecompressAmbientOcclusion(IN.component0),2.2);
	OUT.amboccl_alpha.y	= IN.color.w;
	OUT.amboccl_alpha.z	= CalcVertexFog(OUT.position);
	OUT.normal_ndotl.xyz= IN.normal;
	OUT.normal_ndotl.w	= dot( IN.normal.xyz, cvLocalLightVec.xyz );;

#ifndef DISABLE_SHADOW
	OUT.shadow_input	= VertexShadowTexOptimized( IN.position, OUT.normal_ndotl.w, OUT.tex23_shadow_fade.z);
#else
	OUT.tex23_shadow_fade.z = 0;
#endif

#ifdef REFLECTION
	float4 screen_refl	= OUT.position;
	screen_refl.y		= -screen_refl.y;
	screen_refl.xy		+= screen_refl.w;
	screen_refl.xy		*= 0.5;
	OUT.reflection_tex	= screen_refl;

#endif

	return OUT;
}

float4 RoadPixelShader(const PS_INPUT IN, int shadowDetail = ShadowShaderDetail_HIGH)
{

	//
	// Base Textures
	//
	float4 base_texture		= tex2Dbias(ROADBASE_SAMPLER, float4(IN.tex01.xy, 0, -1.0));
	float4 elements_texture = tex2Dbias(ROADELEMENTS_SAMPLER, float4(IN.tex01.zw, 0, -3.0));
#ifdef DETAILMAP
	float detailmap_texture = tex2Dbias(DETAILMAP_SAMPLER, float4(IN.tex01.xy, 0, 0.3)).x;
#endif

#ifdef TUNNEL
	float4 lightmap			= tex2Dbias(LIGHTMAP_SAMPLER, float4(IN.tex23_shadow_fade.xy, 0, -1.0));
#else
	float4 damage_texture	= tex2Dbias(ROADDAMAGE_SAMPLER, float4(IN.tex23_shadow_fade.xy, 0, -4.0));
#endif

	// NOTE:  All Lighting Done In Local Space....

	float3 normal = IN.normal_ndotl.xyz;
	float3 view = normalize(IN.view_world);

	// Accumulate Lighting
	float4 OUT = float4(0,0,0,0);

	float diffuse = IN.normal_ndotl.w;

	float shadow = 1;

#ifndef DISABLE_SHADOW
	// Cheating shadows on road right now because tends to be too dark with spec,
	// might have to figure something else out later, but right now this works nicely
	shadow = DoShadowOptimized( IN.shadow_input, IN.normal_ndotl.w, IN.tex23_shadow_fade.z, shadowDetail );

#endif

	//
	// Road Compositing
	//

	float3 road_composite = base_texture.xyz;

#ifdef DETAILMAP
	// Modulate the detail map into the base
	road_composite.xyz *= detailmap_texture * 2;
#endif

	// Elements layer over base layer...
	road_composite = lerp(road_composite.xyz * 0.7, elements_texture.xyz, elements_texture.a );	

	float shadow_bumped = 0.4 + 0.6 * shadow;

#ifdef TUNNEL
	OUT.xyz = lightmap.w * GranitoLightingModel( diffuse , shadow_bumped, road_composite.rgb, IN.amboccl_alpha.x, 1 );
	OUT.xyz += 1.7 * lightmap.xyz * road_composite.rgb;
#else
	// Use the photoshop overlay blend mode for the damage layer
	float3 damage_overlay;
	float  damage_lum = dot( damage_texture.rgb, float3(0.3,0.59,0.11)) - 0.5;	
	if ( damage_lum &lt; 0.0 )
		damage_overlay = 2 * damage_texture.rgb * road_composite;
	else
		damage_overlay = 1 - 2 * (1-damage_texture.rgb) * (1-road_composite);
	road_composite = lerp(road_composite.xyz, damage_overlay.xyz, damage_texture.a);

	OUT.xyz = GranitoLightingModel( diffuse , shadow_bumped, road_composite.rgb, IN.amboccl_alpha.x, 1 );
#endif

	//
	// Lighting Calculations
	//

	float3 spec = BlinnPhongSpecRoad( view, cvLocalLightVec.xyz, normal.xyz );

	// Use Spec Map 
	float spec_map = base_texture.a;
	float3 spec_result = spec_map * shadow;

#ifdef TUNNEL
	spec_result *= lightmap.w;
#endif

	// Big Specular On Road...
	OUT.xyz += spec * spec_result;

	// Detailed Spec Around Viewer....  Spencer look at difference before you cull this... 8)...
	//OUT.xyz += spec_map * spec_result * dot(view.xyz, normal.xyz);

	// OPACITY
	OUT.w = base_texture.w * IN.amboccl_alpha.y;

#ifdef REFLECTION
	OUT.xyz *= 0.4;
	//
	// Road reflections using a reflection buffer
	//
	float4 reflection	= tex2Dproj(REFLECTION_SAMPLER, IN.reflection_tex);
	reflection.xyz 		= lerp(0.55, pow(reflection.xyz,1.5), reflection.w);
	OUT.xyz			+= reflection*pow(spec_map,0.7);

#endif

#if defined(TUNNEL)
	float fog_value = (lightmap.w) * IN.amboccl_alpha.z + (1-lightmap.w);
#else
	float fog_value = IN.amboccl_alpha.z;
#endif

	//OUT.xyz = shadow;

	OUT.xyz = CalcFogColour(OUT.xyz, fog_value);

	OUT.xyz = CompressColourSpace(OUT.xyz);

#ifdef LOD_TEST
	OUT.xyzw = 0.00001 * OUT.xyzw + float4(0.9,0,0,0.9);
#endif
	return OUT;
}

#endif
</file>
  <file id="2" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\global.h" time="01c7f8c7-b0ef0cee">#ifndef GLOBAL_H
#define GLOBAL_H

#include "registermap.h"   

// Defined out for the Xbox360 - only needed on the PC
#define DECLARE_TEXTURE(texture)	
#define ASSIGN_TEXTURE(texture)	
#define DECLARE_MINFILTER(default_filter)			 MINFILTER = default_filter;
#define DECLARE_MAGFILTER(default_filter)			 MAGFILTER = default_filter;
#define DECLARE_MIPFILTER(default_filter)			 MIPFILTER = default_filter;

/////////////////////////////////////////////////////////////////////////////////////////
float4x4	cmWorldViewProj			: REG_cmWorldViewProj; //WORLDVIEWPROJECTION ;
float4		cvScreenOffset			: REG_cvScreenOffset; //SCREENOFFSET;
float4		cvVertexPowerBrightness : REG_cvVertexPowerBrightness;

float4 world_position( float4 screen_pos )
{
 	float4 p = mul(screen_pos, cmWorldViewProj);  
	p.xy += cvScreenOffset.xy * p.w;
    return p;
}

float4 screen_position( float4 screen_pos )
{
	screen_pos.xy += cvScreenOffset.xy;
    return screen_pos;
}

float4 CalcVertexColour(float4 colour)
{
	float4 result = pow(colour, cvVertexPowerBrightness.x) * cvVertexPowerBrightness.y;
	result.w = colour.w;
	return result;
}

float3 ScaleHeadLightIntensity(float3 colour) 
{
	float3 result = colour * cvVertexPowerBrightness.z;
	return result;
}



/////////////////////////////////////////////////////////////////////////////////////////
// HDR Colour Space compression
//
// Convert to a log or psudeo-log colour space to save high dynamic range data
/////////////////////////////////////////////////////////////////////////////////////////
#define kCompressCoeff ( 1.0f )
float3 CompressColourSpace(float3 colour)
{
	return colour / (kCompressCoeff+colour);
}

float3 DeCompressColourSpace(float3 colour)
{
	return colour / (kCompressCoeff-colour);
}


/////////////////////////////////////////////////////////////////////////////////////////
// RGBE8 Encoding/Decoding
// The RGBE8 format stores a mantissa per color channel and a shared exponent 
// stored in alpha. Since the exponent is shared, it's computed based on the
// highest intensity color component. The resulting color is RGB * 2^Alpha,
// which scales the data across a logarithmic scale.
/////////////////////////////////////////////////////////////////////////////////////////

float4 EncodeRGBE8( in float3 rgb )	  
{
	float4 vEncoded;

    // Determine the largest color component
	float maxComponent = max( max(rgb.r, rgb.g), rgb.b );
	
	// Round to the nearest integer exponent
	float fExp = ceil( log2(maxComponent) );

    // Divide the components by the shared exponent
	vEncoded.rgb = rgb / exp2(fExp);
	
	// Store the shared exponent in the alpha channel
	vEncoded.a = (fExp + 128) / 255;

	return vEncoded;
}

/////////////////////////////////////////////////////////////////////////////////////////

float3 DecodeRGBE8( in float4 rgbe )
{
	float3 vDecoded;

    // Retrieve the shared exponent
	float fExp = rgbe.a * 255 - 128;
	
	// Multiply through the color components
	vDecoded = rgbe.rgb * exp2(fExp);
	
	return vDecoded;
}

/////////////////////////////////////////////////////////////////////////////////////////
#endif</file>
  <file id="3" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\registermap.h" time="01c7f8c7-b0d997bb">
// ------------------------------------------------------------------------------------------------------------------------------------------

#define CONSTANT_RESERVED_DO_NOT_USE			(0)		/* 4 vectors [c0,c3] */

// ------------------------------------------------------------------------------------------------------------------------------------------

#define REG_RESERVED_DO_NOT_USE			register(c0)	/* 4 vectors [c0,c3] */

#define REG_cmWorldMat					register(c4)	/* 4 vectors [c0,c3] */
#define REG_cmWorldMatTranspose			register(c8)	/* 4 vectors [c4,c7] */
#define REG_cmWorldView					register(c12)	/* 4 vectors [c8,c11] */
#define REG_cmShadowMapWVP				register(c16)	/* 4 vectors [c12,c15] */
#define REG_cmLightWVP					register(c20)	/* 4 vectors [c16,c19] */
#define REG_cmWorldViewProj				register(c24)	/* 4 vectors [c20,c23] */
#define REG_cmPrevWorldViewProj			register(c28)	/* 4 vectors [c24,c27] */
#define REG_cvLocalEyePos				register(c32)	/* 1 vecotr	 [c32] */
#define REG_cvLocalLightVec				register(c33)	/* 1 vecotr	 [c33] */
#define REG_cfSkyDomeRotation			register(c34)	/* 1 vecotr	 [c34] */

#define REG_cmLocalColourMatrix			register(c36)	/* 4 vectors [c36,c39] */
#define REG_cmLocalDirectionMatrix		register(c40)	/* 4 vectors [c40,c43] */
#define REG_cmLocalPositionMatrix		register(c44)	/* 4 vectors [c44,c47] */
#define REG_cavHarmonicCoeff			register(c48)	/* 10 floats, 3 vectors, 1 pad vector [48,51] */

#define REG_camBlendMatrices			register(c52)	/* 16 vectors [c52,c67] */
#define REG_cavWorldHeadlightDirection	register(c68)	/* 2 vectors [c68,c69] */
#define REG_cavWorldHeadlightPosition	register(c70)	/* 2 vectors [c70,c71] */
#define REG_cavWorldHeadlightUpDirection register(c72)	/* 2 vectors [c72,c73] */

#define REG_cmShadowMapVP				register(c68) // note clash with head light
#define REG_cmShadowMapBiasMatrix		register(c72)	/* 4 vectors [c72, c75] */



#define REG_cvWorldSunColour			register(c79)
#define REG_cvWorldAmbientColour		register(c80)

// available: [c82,c115] (but would alias cavPcaWeightsR and cavPcaWeightsG)
// PCA/UCap parameters (ucap.fx, water.fx)
#define REG_cafPcaMean					register(c81)	/* 1 vector */
#define REG_cavPcaWeightsR				register(c82)	/* 22 vectors [c82,c103] */
#define REG_cavPcaWeightsG				register(c104)	/* 22 vectors [c104,c125] */
#define REG_cavPcaWeightsB				register(c126)	/* 22 vectors [c126,c147] */
#define REG_cavPcaWeightsX				register(c148)	/* 8 vectors [c148,c155] */
#define REG_cavPcaWeightsY				register(c156)	/* 8 vectors [c156,c163] */
#define REG_cavPcaWeightsZ				register(c164)	/* 8 vectors [c164,c171] */
#define REG_cavPcaWeightsNX				register(c172)	/* 8 vectors [c172,c179] */
#define REG_cavPcaWeightsNY				register(c180)	/* 8 vectors [c180,c187] */
#define REG_cavPcaWeightsNZ				register(c188)	/* 8 vectors [c188,c195] */
#define REG_cavFeatureHeights			register(c196)	/* 1 vector */


// The following parameters alias cavPcaWeightsG:
#define REG_cfMipMapBias				register(c116)
#define REG_cfBrightness				register(c117)
#define REG_cfSurfaceReflection			register(c118)
#define REG_cfRainIntensity				register(c119)
#define REG_cfSpecularPower				register(c120)
#define REG_cfMetallicScale				register(c121)
#define REG_cfEnvmapPullAmount			register(c122)
#define REG_cfEnvmapPower				register(c123)
#define REG_PAD2						register(c125)

// The following parameters alias cavPcaWeightsB:
#define REG_cfCombinedBrightness		register(c126)
#define REG_cvVisualEffectFadeColour	register(c127)	/* also aliases cfSkyAlphaTag */
#define REG_cfSkyAlphaTag				register(c127)	/* also aliases cvVisualEffectFadeColour */
#define REG_cfShadowVolumeOffset		register(c128)
#define REG_cfRVMWorldBrightness		register(c129)
#define REG_cfDesaturation				register(c130)
#define REG_cfBloomScale				register(c131)
#define REG_cfSplitScreenUVScale		register(c132)
#define REG_cfColourCubeFilterBlend		register(c133)
#define REG_cfTimeTicker				register(c134)
#define REG_cfMiddleGray				register(c135)
#define REG_cfBrightPassThreshold		register(c136)

#define REG_cvScreenOffset				register(c137)
#define REG_cvFog_Br_Plus_Bm			register(c138)
#define REG_cvFog_One_Over_BrBm			register(c139)
#define REG_cvFog_Const_1				register(c140)
#define REG_cvFog_Const_2				register(c141)
#define REG_cvFog_Const_3				register(c142)
#define REG_cvAmbientColour				register(c143)
#define REG_cvShadowParams0				register(c144)
#define REG_cvShadowParams1				register(c145)


// The following parameters alias cavPcaWeightsX:
#define REG_cvDiffuseColour				register(c148)
#define REG_cvSpecularColour			register(c149)
// available: [c150,c155] (but would alias cavPcaWeightsX)

// The following parameters alias cavPcaWeightsY:
#define REG_cvShadowColour				register(c156)
#define REG_cvTextureOffset				register(c161)
#define REG_cvLocalCenter				register(c162)
#define REG_cvTreeParams				register(c163)

// The following parameters alias cavPcaWeightsZ:
#define REG_cvBaseAlphaRef				register(c164)
#define REG_cvCloudIntensity			register(c165)
#define REG_cvLocalLightPos				register(c166)
#define REG_cvPixelizationScale			register(c167)
#define REG_cvGrassColour				register(c169)

// The following parameters alias cavPcaWeightsNX:
#define REG_cvDepthOfFieldParams		register(c172)	/* aliases cavFeatureHeights */
#define REG_cvBlurParams				register(c173)
// The following parameters alias cavPcaWeightsNX and cavPcaWeightsNY:
#define REG_cavSampleOffsetWeights		register(c174)	/* 16 vectors [c174,c189] */

#define REG_PAD0						register(c190)	/* free space!! */

#define REG_cvFogValue					register(c206)
#define REG_cvFogColour					register(c207)
#define REG_cfSkyFogFalloff				register(c208)
#define REG_cfLightMapVertColBlend		register(c209)

#define REG_cvLightColour				register(c210)
#define REG_cvLightPosition				register(c211)

#define REG_cvLightDirection			register(c212)
#define REG_cfShadowMapEnabled			register(c213)
#define REG_cfVSMEnabled				register(c214)
#define REG_cfReceiveShadow				register(c215)

#define REG_cvVertexPowerBrightness		register(c216)

#define REG_cfFogEnable					register(c240)



// Light Material Registers - alias REG_cavLightDirections

#define REG_cvDiffuseMin				register(c228)
#define REG_cvDiffuseRange				register(c229)
#define REG_cvEnvmapMin					register(c230)
#define REG_cvEnvmapRange				register(c231)
#define REG_cvSpecularMin				register(c232)
#define REG_cvSpecularRange				register(c233)
#define REG_cvSpecular1Min				register(c234)
#define REG_cvSpecular1Range			register(c235)
#define REG_cvPowers					register(c236)
#define REG_cvClampAndScales			register(c237)
#define REG_cvFlakes					register(c238)
#define REG_cvVinylScales				register(c239)

#define	REG_cvGradientParams            register(c240)
#define	REG_cvGradientColour            register(c241)
#define	REG_cvGradientColourE           register(c242)
#define	REG_ScreenRez                  	register(c243)
#define REG_cfScaleUVs					register(c244)

// for the constants heavy shader instancing
// 4 vectors, c4 to c7
#define REG_cmInstanceVP					register(c4)
#define REG_cvInstanceData					register(c8)
#define REG_cvInstanceWorldSunPosition		register(c9)
#define REG_cvInstanceWorldSunColour		register(c10)
#define REG_cvInstanceWorldAmbientColour	register(c11)
#define REG_cvInstancedFogColour			register(c12)
#define REG_cvInstancedFogValue				register(c13)
#define REG_cvInstanceArray					register(c14)


// Aliased With Light Materials ...

#define REG_cfDrawDepthOfField			register(c230)


#define REG_ciVSMEnabled				register(c)
#define REG_ciShadowMapPCFLevel			register(c)
#define REG_ciShadowMapAlphaEnabled		register(c)
#define REG_ciDoCarShadowMap			register(c)
#define REG_cbIsParallexMapped			register(c)
#define REG_cbDecompressPCA				register(c)

#define REG_DIFFUSE_SAMPLER				register(c)
#define REG_HEIGHTMAP_SAMPLER			register(c)
#define REG_MISCMAP1_SAMPLER			register(c)
#define REG_MISCMAP2_SAMPLER			register(c)
#define REG_MISCMAP3_SAMPLER			register(c)
#define REG_MISCMAP4_SAMPLER			register(c)
#define REG_OPACITY_SAMPLER				register(c)
#define REG_VOLUMEMAP_SAMPLER			register(c)
#define REG_ENVIROMAP_SAMPLER			register(c)
#define REG_NORMALMAP_SAMPLER			register(c)
#define REG_SHADOWMAP_SAMPLER			register(c)
#define REG_SHADOWVOLUME_COLOUR			register(c)
#define REG_SPECULARMAP_SAMPLER			register(c)
#define REG_PCA_COMPONENTS0_SAMPLER		register(c)
#define REG_PCA_COMPONENTS1_SAMPLER		register(c)
#define REG_PCA_COMPONENTS2_SAMPLER		register(c)
#define REG_PCA_COMPONENTS3_SAMPLER		register(c)
#define REG_HEADLIGHT_SAMPLER			register(c)
#define REG_HEADLIGHT_CLIP_SAMPLER		register(c)
#define REG_MIPMAP_GEN_SAMPLER			register(c)





</file>
  <file id="4" path="D:\eax-build1-s09-xenon\Oban\Speed\Indep\Src\Render\Shaders\shadowenum.h" time="01c7f8bf-7e400889">#ifndef SHADOWENUM_H
#define SHADOWENUM_H

// these numbers should match up with the enumerations in ShadowShaderDetail in eEffect.hpp
// (should make these in a header thats included by both fxc and the game compiler)
static const int ShadowShaderDetail_OFF = 0;
static const int ShadowShaderDetail_LOW = 1;
static const int ShadowShaderDetail_MEDIUM = 2;
static const int ShadowShaderDetail_HIGH = 3;

#endif
</file>
  <file id="5" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\fog.h" time="01c7f8c7-b0ecaa93">#ifndef FOG_H
#define FOG_H 


#include "registermap.h"

shared float4 cvFogColour			: REG_cvFogColour;

// x : fog end distance
// y : 1.0f / (fog_end_dist - fog_start_dist)
// z : maximum fog intensity (clamp to this so that objects don't turn into the pure fog colour at long ranges)
// w : exponent that modifies how the fog falls off over distance
shared float4 cvFogValue			: REG_cvFogValue;

// This is 1.0 if fog is enabled and 0.0 if fog is disabled
shared float cfFogEnable			: REG_cfFogEnable;

// Calculates the fog colour (not light scattering fog, but regular fog) for each vertex
// vert_pos should be the result of a mul(IN.position, WVP) operation
float CalcVertexFog(float4 vert_pos_screen)
{
	float fog_end = cvFogValue.x;
	float fog_recip_end_minus_start = cvFogValue.y;
	float dist_fog_power = cvFogValue.z;
	float fog_exponent = cvFogValue.w;

	//float3 screen_pos_normalized = abs(vert_pos_screen.xyz / vert_pos_screen.w);
	                                                                                                                                 
	float fog_intensity_dist = saturate((fog_end - vert_pos_screen.z) * fog_recip_end_minus_start);
	fog_intensity_dist = pow((1.0 - fog_intensity_dist), fog_exponent) * dist_fog_power;

	float result = fog_intensity_dist;

	// Maybe the fog should be off? If thats what the user wants, cfFogEnable will be 0.0f
	result *= cfFogEnable;

	// We do the following because with the Fog register, a value of 0 means full on fog colour
	// a value of 1.0 means no fog whatsoever, so we reverse it.
	result = 1.0 - result; 
        
	return result;
}



// The xbox 360 doesn't have fog hardware like PC video cards do, so implement the same functionality here
// srcColour is the output colour from the pixel shader. Modulate it by invFogIntensity.
float3 CalcFogColour(float3 src_colour, float inv_fog_intensity)
{
	//float3 fogColour	= lerp(cvFogColour.xyz, src_colour, inv_fog_intensity);
	//return fogColour;//lerp(fogColour, src_colour , pow(max(max(src_colour.x, src_colour.y) , src_colour.z), 7) );
	
	//float fog_lerp = saturate(inv_fog_intensity + pow(max(max(src_colour.x, src_colour.y) , src_colour.z), 7));
	//float3 result = src_colour * inv_fog_intensity + (1 - inv_fog_intensity) * cvFogColour.xyz;
	//return result;	
	return lerp(cvFogColour.xyz, src_colour, inv_fog_intensity);
}


//
// This version is used when the fog is calculated in the post processing
//
float4 CalcPostProcessFog(float4 srcColour, float depth)   //  w is wPos
{
	float zDist	= (1 / (1-depth));
	zDist *= cfFogEnable;

	float fog_end					= cvFogValue.x;
	float fog_recip_end_minus_start = cvFogValue.y;
	float distFogPower				= cvFogValue.z;
	float fog_exponent				= cvFogValue.w; 


	float fogIntensityDist = saturate((fog_end - zDist) * fog_recip_end_minus_start);
	fogIntensityDist = pow((1.0 - fogIntensityDist), fog_exponent) * distFogPower * 0.5;

	// pixel
	float4 result		= srcColour;
	float4 fogColour	= lerp(result, cvFogColour, fogIntensityDist);
	result.xyz			= lerp(fogColour, result.xyz , pow(max(max(result.x, result.y) , result.z), 7) );
	//result.xyz = fogColour;
	result.w			= srcColour.w;  

	//float3 blend_fog = CalcFogColour(OUT, IN.fog);
	//OUT.xyz = lerp(blend_fog, OUT.xyz , pow(max(max(OUT.x, OUT.y) , OUT.z), 7) );
	//result.xyz = pow(max(max(result.x, result.y) , result.z), 7);//fogIntensityDist;

	//result.xyz = depth;
	return result; 
}


#endif</file>
  <file id="6" path="D:\eax-build1-s09-xenon\Oban\Speed\Indep\Src\Render\Shaders\lighting_models.h" time="01c7f8bf-7e3da62e">
#ifndef LIGHTING_MODELS_H
#define LIGHTING_MODELS_H

/*
	Define All Lighting Models Here, this includes lighting models like blinn, lambert, cook-torrence, BRDF look-up table etc

*/


float3	cvWorldSunColour		: REG_cvWorldSunColour;
float3	cvWorldAmbientColour	: REG_cvWorldAmbientColour;
float4	cvSpecularColour		: REG_cvSpecularColour;		// xyz = spec colour,		w = spec intensity
float4	cfSpecularPower			: REG_cfSpecularPower;		// x = world spec power,	y = road spec power


// This Crazy Expensive Blinn Should Not Be Used Anymore....
float3 Blinn(
	float cosln,
	float3 view_dir,
	float3 light_dir,
	float3 normal,
	float eccentricity,
	float rolloff)
{
	float3 specular_color = float3(0, 0, 0);

	if( cosln &gt; 0.0f )
	{
		float3 half_angle_dir = normalize(light_dir + view_dir);

		float coseh = dot(half_angle_dir, view_dir);
		float cosnh = dot(half_angle_dir, normal);

		// We want the range of eccentricity to go from 0-1 for
		// 2 reasons. 1. UI looks much nicer. 2. texture mapping the value is much simpler
        // when the effective range of this attribute runs from 0 to 1, rather than -0.765 to
		// -2 or what ever it is otherwise. APP 09may97
		float computed_ecc = eccentricity * eccentricity - 1.0;

		//
		float denom = 1.0 + computed_ecc * cosnh * cosnh;
		float dd;
		dd = (computed_ecc + 1.0f) / denom;
		dd = dd * dd;

		cosnh = 2 * cosnh;

		float gg;
		float cosne = dot(view_dir, normal);
		if (cosne &lt; cosln) 
		{
			gg = (cosne*cosnh &lt; coseh) ? cosnh / coseh : 1.0f / cosne;
		}
		else 
		{
			gg = (cosln*cosnh &lt; coseh) ? cosln * cosnh / (coseh * cosne) : 1.0f / cosne;
		}
		
		// Fresnel calculation.
		coseh = 1.0f - coseh;
		coseh = coseh * coseh * coseh;
		float ff = coseh + (1.0f - coseh) * rolloff;


		// Make sure that the specularCoefficient doesn't become negative.
		float specular_coefficient = max(dd * gg * ff, 0);
		specular_color = specular_coefficient;

	}

//	specular_color = 0;
	return specular_color;

}

float3 BlinnPhongSpecRoad( float3 view_dir, float3 light_dir, float3 normal )
{

	float3 OUT;

	// Phong
	#if 0
	float3 R = -light_dir + 2 * (dot(normal,light_dir)*normal);
	OUT = pow(saturate(dot( R, view_dir )), n );
	#endif

	// Blinn
	#if 1
	float3 half_angle = normalize(view_dir + light_dir);

	float cosnh = dot(half_angle, normal);

	float denom = 1.0 + -0.96 * pow(cosnh,cfSpecularPower.y);
	float dd;
	dd = (0.05) / denom;

	OUT = saturate(cosnh) * dd * dd * cvSpecularColour.xyz * cvSpecularColour.w;
//	OUT = float3(1,0,0);
	#endif
		

	return OUT;

}

float3 BlinnPhongSpec( float3 view_dir, float3 light_dir, float3 normal, float n )
{

	float3 OUT;

	// Phong
	#if 0
	float3 R = -light_dir + 2 * (dot(normal,light_dir)*normal);
	OUT = pow(saturate(dot( R, view_dir )), n );
	#endif

	// Blinn
	#if 1
	float3 half_angle = normalize(view_dir + light_dir);
	OUT = pow(saturate(dot( half_angle, normal )), n );
	#endif
		
	return OUT;

}

float3 BlinnPhongSpecChars( float3 view_dir, float3 light_dir, float3 normal, float n , float3 bias_dir, float backside)
{

	float3 OUT;

	// Phong
	#if 0
	float3 R = -light_dir + 2 * (dot(normal,light_dir)*normal);
	OUT = pow(saturate(dot( R, view_dir )), n );
	#endif

	// Blinn
	#if 1
	// do sunnyside
	float3 half_angle	= normalize(view_dir + light_dir + bias_dir);
	OUT					= pow(saturate(dot( half_angle, normal )), n ) ;
	half_angle			= normalize(view_dir + bias_dir);
	half_angle			= normalize(view_dir);
	OUT					+= pow(saturate(dot( half_angle, normal )), n ) * backside;
	OUT					*= cvWorldSunColour;
	#endif
	//OUT = backside;
	return OUT;

}

float3 GranitoLightingModel( float diffuse, float shadow, float3 base, float ambient_occlusion, float vertex_colour )
{
	float3 final;

	//  cvWorldAmbientColour         ... Ambiant Color
	//  cvWorldSunColour             ... Sun Color 
	//  lighting_val_diffuse         ... NdotL * Shadow
	//  vertex_colour         ... Vertex Ambiant Occlusion
	//  ambient_occlusion            ... Texture Ambiant Occlusion
	//  base.xyz                     ... Diffuse

	// Create Light Wrap Around To Soften The World Lighting (Helps Alot!!!!)
//	if ( diffuse &lt; -0.2 ) // Might still be needed to handle shadow cutoffs
//		shadow = 1;
	diffuse = (0.2 + diffuse) / 1.2; // This creates wrap around lighting... prevent cg look to game

	// Use reverse side of diffuse to take away flat look of game....
	float diffuse_rev = 0.7 + 0.3* saturate(diffuse+1);

	// Prevent negative lighting effects...
	diffuse = max(0.0, diffuse);

	// Add up lighting in game....
	float3 lighting_val_diffuse = diffuse * shadow;
	float3 lighting_lighten = cvWorldSunColour * lighting_val_diffuse;

	// Base Texture...
	final.xyz = base.xyz * ambient_occlusion;

	// Ambient with falloff...
	float3 ambient_new = cvWorldAmbientColour * diffuse_rev;

	//apply lighting
	//final.xyz *= (lighting_lighten + ambient_new) * pow(ambient_occlusion,2.2) + (1.5 * ambient_new); // Simplified CH
	final.xyz *= (lighting_lighten + ambient_new) + (1.5 * ambient_new); // Simplified CH

	//apply vertex occ
//	final.xyz *= lerp(vertex_colour,1,lighting_val_diffuse); // Not sure there is a hardware lerp inst... so below should be faster????
	final.xyz *= (1-lighting_val_diffuse) + lighting_val_diffuse;

	return final;

}


float3 GranitoLightingModelLite( float diffuse, float shadow, float3 base )
{
	float3 final;

	//  cvWorldAmbientColour         ... Ambiant Color
	//  cvWorldSunColour             ... Sun Color 
	//  lighting_val_diffuse         ... NdotL * Shadow
	//  base.xyz                     ... Diffuse

	// Create Light Wrap Around To Soften The World Lighting (Helps Alot!!!!)
//	if ( diffuse &lt; -0.2 ) // Might still be needed to handle shadow cutoffs
//		shadow = 1;
	diffuse = (0.2 + diffuse) / 1.2; // This creates wrap around lighting... prevent cg look to game

	// Use reverse side of diffuse to take away flat look of game....
	float diffuse_rev = 0.7 + 0.3* saturate(diffuse+1);

	// Prevent negative lighting effects...
	diffuse = max(0.0, diffuse);

	// Add up lighting in game....
	float3 lighting_val_diffuse = diffuse * shadow;
	float3 lighting_lighten = cvWorldSunColour * lighting_val_diffuse;

	// Base Texture...
	final.xyz = base.xyz;

	// Ambient with falloff...
	float3 ambient_new = cvWorldAmbientColour * diffuse_rev;

	//apply lighting
//	final.xyz *= (lighting_lighten + ambient_new) + (1.5 * ambient_new); // Simplified CH
	final.xyz *= lighting_lighten + (2.5 * ambient_new);

	return final;

}

float3 GranitoLightingModelVertexShader( float diffuse, float ambient_occlusion )
{
	float3 final;

	diffuse = (0.2 + diffuse) / 1.2; // This creates wrap around lighting... prevent cg look to game

	// Use reverse side of diffuse to take away flat look of game....
	float diffuse_rev = 0.7 + 0.3* saturate(diffuse+1);

	// Prevent negative lighting effects...
	diffuse = max(0.0, diffuse);

	// Add up lighting in game....
	float3 lighting_lighten = cvWorldSunColour * diffuse;

	// Ambient with falloff...
	float3 ambient_new = cvWorldAmbientColour * diffuse_rev;

	//apply lighting
	final.xyz = (lighting_lighten + ambient_new) * ambient_occlusion + (1.5 * ambient_new); // Simplified CH

	return final;

}


/*  - To be removed to hdr-color correction library...
float3 GammaCorrection(float3 c)
{
	float3 ld			= 0.002;
	float lin_reference	= 0.18;
	float log_reference	= 444;
	float log_gamma		= 0.45;

	//c = clamp(c, 0, 100);
	
	float3 corrected;
	corrected = (log10(c/lin_reference)/ld*log_gamma + log_reference)/1023.f;

	corrected = clamp(corrected, 0, 1);

	float3 index = corrected*0.98 + 0.01;

	float3 r = tex2D(HEIGHTMAP_SAMPLER, float2(index.r, 0.5));
	float3 g = tex2D(HEIGHTMAP_SAMPLER, float2(index.g, 0.5));
	float3 b = tex2D(HEIGHTMAP_SAMPLER, float2(index.b, 0.5));

	corrected.r = r.r;
	corrected.g = g.g;
	corrected.b = b.b;

	return corrected;
}
*/

#endif
</file>
  <file id="7" path="D:\eax-build1-s09-xenon\Oban\Speed\Indep\Src\Render\Shaders\pcavertexcolours.h" time="01c7f8bf-7e3da62e">#ifndef PCA_VERTEX_COLOURS_H
#define PCA_VERTEX_COLOURS_H


shared float4   cavPcaWeightsR[2]	: REG_cavPcaWeightsR;	// PCA Instance Vertex Colours (ProStreet=ambient occlusion)
shared float4	cafPcaMean			: REG_cafPcaMean;

 


float PcaDecompressAmbientOcclusion(float4 component0, float4 component1)
{
	// Decompress the instanced PCA vertex colour
	float val = cafPcaMean[0] + dot(cavPcaWeightsR[0], component0) + dot(cavPcaWeightsR[1], component1);
	return val / 255.0f;					// result is a colour from 0-255 so convert to 0-1
}


//
// Only one component is used for shaders like the road and terrain where we know there is no instancing
//
float PcaDecompressAmbientOcclusion(float4 component0)
{
	// Decompress the instanced PCA vertex colour
	float val = cafPcaMean[0] + dot(cavPcaWeightsR[0], component0);
	return val / 255.0f;					// result is a colour from 0-255 so convert to 0-1
}

#endif
</file>
  <file id="8" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\shadowmap_fx_def.h" time="01c7f8c7-b0ffbd6b">/////////////////////////////////////////////////////////////////////////////////////////
#include "shadowenum.h"

shared float4x4	cmShadowMapWVP			: REG_cmShadowMapWVP;
shared float4x4	cmShadowMapVP			: REG_cmShadowMapVP;
shared float4x4 cmLightWVP				: REG_cmLightWVP;
shared float4x4 cmShadowMapBiasMatrix	: REG_cmShadowMapBiasMatrix;
shared float4	cvLightDirection		: REG_cvLightDirection;

shared float4 cvAmbientColour			: REG_cvAmbientColour;
shared float4 cvShadowParams0			: REG_cvShadowParams0;
shared float4 cvShadowParams1			: REG_cvShadowParams1;

shared float cfShadowMapEnabled			: REG_cfShadowMapEnabled;
shared float cfVSMEnabled				: REG_cfVSMEnabled;	
shared float cfReceiveShadow			: REG_cfReceiveShadow;


#define	cfShadowMapAlphaMin cvShadowParams0.x
#define	cfShadowMapBiasA	cvShadowParams0.y
#define	cfShadowMapBiasB	cvShadowParams0.z
#define	cfVSMEpsilon		cvShadowParams0.w

#define	ShadowMapNdotLBiasOffset	cvShadowParams1.x
#define	ShadowMapNdotLBiasScale		cvShadowParams1.y
#define	ShadowMapVSMThreshold		cvShadowParams1.z
#define	ShadowMapWingMirrorBias		cvShadowParams1.w

#define SHADOWMAP_C1				0.2f
#define SHADOWMAP_C2				0.1f

//#define cfShadowMapScaleY	cvShadowParams1.w


//#define ENABLE_SHADOW_STENCIL_MASK
//#define SHADOW_LOD_ON

#define USE_SHADOW_OPTIMIZED

/////////////////////////////////////////////////////////////////////////////////////////

sampler SHADOWMAP_SAMPLER = sampler_state
{
	BorderColor = 0xFFFFFFFF;
	AddressU    = BORDER;
	AddressV    = BORDER;
	MIPFILTER   = NONE; //POINT;
	MINFILTER   = POINT;
	MAGFILTER   = POINT;
};

/////////////////////////////////////////////////////////////////////////////////////////

struct PS_INPUT_LISPSM
{
	float4 position		: POSITION;
};

/////////////////////////////////////////////////////////////////////////////////////////

struct PS_INPUT_LISPSM_ALPHA
{
	float4 position		: POSITION;
	float4 diffuse_tex	: TEXCOORD0;
	//float4 light_tex	: TEXCOORD1;
};

/////////////////////////////////////////////////////////////////////////////////////////

struct PS_OUTPUT_LISPSM
{
	float4 color		: COLOR0;
	//	float depth			: DEPTH0;
};

/////////////////////////////////////////////////////////////////////////////////////////

struct PS_INPUT_TSM
{
	float4 position		: POSITION;
	float4 light_tex	: TEXCOORD1;
};

/////////////////////////////////////////////////////////////////////////////////////////

struct PS_INPUT_TSM_ALPHA
{
	float4 position		: POSITION;
	float4 diffuse_tex	: TEXCOORD0;
	float4 light_tex	: TEXCOORD1;
};

/////////////////////////////////////////////////////////////////////////////////////////

struct PS_OUTPUT_TSM
{
	float4 color		: COLOR0;
	float depth			: DEPTH0;
};

/////////////////////////////////////////////////////////////////////////////////////////

float4 VertexShadowTex( const float4 v_position )
{
	return mul( v_position, cmShadowMapWVP );
}

float4 VertexShadowTexOptimized( const float4 v_position, float ndotl, out float shadow_fade)
{
	float4 shadow_tex		= mul( v_position, cmShadowMapWVP );

#ifdef USE_SHADOW_OPTIMIZED

	// bias
//	shadow_tex.z			= shadow_tex.z / shadow_tex.w - ShadowMapNdotLBiasOffset - ShadowMapNdotLBiasScale * (1.0f - max(SHADOWMAP_C2, saturate(ndotl)));
	// edge attenuation
	float2 edgeAttenuation = shadow_tex.xy / shadow_tex.w;
	edgeAttenuation = saturate(1 - pow(edgeAttenuation,4));
	shadow_fade	= 1 - edgeAttenuation.x * edgeAttenuation.y;
#else
	shadow_fade = 0;
#endif

	return shadow_tex;
}

/////////////////////////////////////////////////////////////////////////////////////////
/*
float4 VertexLightTex( const float4 v_position )
{
return mul( v_position, cmLightWVP );
}
*/
/////////////////////////////////////////////////////////////////////////////////////////

float4 VertexShadowPosView( const float4 v_position )
{
	// Transform position to view space
	return mul( v_position, cmWorldView );
}

/////////////////////////////////////////////////////////////////////////////////////////

float2 GetShadowMapTexCoord( const float4 s_tex )
{
	float2	shadow_tex_c = (0.5 * s_tex.xy / s_tex.w) + 0.5f;

	shadow_tex_c.y = 1.0f - shadow_tex_c.y;

	return shadow_tex_c;
}

/////////////////////////////////////////////////////////////////////////////////////////

float4 Tex2DOffset( sampler2D ss, float2 uv, float2 offset )
{
	float4 result;
	float offsetx = offset.x;
	float offsety = offset.y;

	asm {
		tfetch2D result, uv, ss, OffsetX=offsetx, OffsetY=offsety
	};

	return result;
}

float DoShadowPCFDepth( const float2 shadow_lookup_uv, const float shadow_bias, const float shadow_fade, const int shadowDetail)
{
	float stepSize = 1.0f;
	float cornerStepSize = 0.5f;

	// Center tap
	float sum = Tex2DOffset( SHADOWMAP_SAMPLER, shadow_lookup_uv, float2(  0,  0 ) ).r; 
	sum = step( shadow_bias, sum );

	//
	// Default 9 tap PCF for anything greater than the low detail
	//
	if(shadowDetail != ShadowShaderDetail_LOW)	// const if-statement compiled out at compile time
	{
		// Top, right, bottom and left taps
		float4 first_group = 0;
		first_group.x = Tex2DOffset( SHADOWMAP_SAMPLER, shadow_lookup_uv, float2( -stepSize, 0 ) ).r; 
		first_group.y = Tex2DOffset( SHADOWMAP_SAMPLER, shadow_lookup_uv, float2( stepSize,  0 ) ).r; 
		first_group.z = Tex2DOffset( SHADOWMAP_SAMPLER, shadow_lookup_uv, float2( 0,  stepSize ) ).r; 
		first_group.w = Tex2DOffset( SHADOWMAP_SAMPLER, shadow_lookup_uv, float2(  0, -stepSize ) ).r; 

		// 4 Corner taps
		float4 second_group = 0;
		second_group.x = Tex2DOffset( SHADOWMAP_SAMPLER, shadow_lookup_uv, float2(  cornerStepSize,  cornerStepSize) ).r; 
		second_group.y = Tex2DOffset( SHADOWMAP_SAMPLER, shadow_lookup_uv, float2(  cornerStepSize, -cornerStepSize ) ).r; 
		second_group.z = Tex2DOffset( SHADOWMAP_SAMPLER, shadow_lookup_uv, float2(  -cornerStepSize, cornerStepSize ) ).r; 
		second_group.w = Tex2DOffset( SHADOWMAP_SAMPLER, shadow_lookup_uv, float2(  -cornerStepSize, -cornerStepSize ) ).r; 

		first_group = step( shadow_bias, first_group );
		second_group = step( shadow_bias, second_group );

		sum += dot(first_group, first_group);
		sum += dot(second_group, second_group);
		sum /= 9.0;
	}

	return (shadow_fade + sum);
}

float DoShadow( const float4 shadow_tex, const float ndotl, int shadowDetail = ShadowShaderDetail_HIGH)
{
	float adjusted_ndotl	= max(SHADOWMAP_C2, saturate(ndotl));


	float2 edgeAttenuation = shadow_tex.xy / shadow_tex.w;
	edgeAttenuation = saturate(1 - pow(edgeAttenuation,4));
	float2 shadow_uv		= GetShadowMapTexCoord( shadow_tex );
	float  shadow_biased	= ( shadow_tex.z / shadow_tex.w ) - ShadowMapNdotLBiasOffset - ShadowMapNdotLBiasScale * (1.0f - adjusted_ndotl);
	float  shadow_fade		= 1 - edgeAttenuation.x * edgeAttenuation.y;

	float fv =  DoShadowPCFDepth( shadow_uv, shadow_biased, shadow_fade, shadowDetail);


	if(shadowDetail != ShadowShaderDetail_LOW)	// const if-statement compiled out at compile time
	{
		fv = saturate(lerp(0.0f, fv, saturate((adjusted_ndotl - SHADOWMAP_C2)/(SHADOWMAP_C1 - SHADOWMAP_C2))) + (1.0 - cfShadowMapEnabled));
	}

	return fv;
}


float DoShadowOptimized( const float4 shadow_tex, const float ndotl, float shadow_fade, int shadowDetail = ShadowShaderDetail_HIGH)
{
	float adjusted_ndotl	= max(SHADOWMAP_C2, saturate(ndotl));

#ifdef USE_SHADOW_OPTIMIZED
	float2 shadow_uv		= GetShadowMapTexCoord( shadow_tex );
	//float  shadow_biased	= shadow_tex.z;
	float  shadow_biased	= ( shadow_tex.z / shadow_tex.w ) - ShadowMapNdotLBiasOffset - ShadowMapNdotLBiasScale * (1.0f - adjusted_ndotl);
#else
	float2 edgeAttenuation = shadow_tex.xy / shadow_tex.w;
	edgeAttenuation = saturate(1 - pow(edgeAttenuation,4));
	float2 shadow_uv		= GetShadowMapTexCoord( shadow_tex );
	float  shadow_biased	= ( shadow_tex.z / shadow_tex.w ) - ShadowMapNdotLBiasOffset - ShadowMapNdotLBiasScale * (1.0f - adjusted_ndotl);
	shadow_fade		= 1 - edgeAttenuation.x * edgeAttenuation.y;

#endif
	float fv =  DoShadowPCFDepth( shadow_uv, shadow_biased, shadow_fade, shadowDetail);

	if(shadowDetail != ShadowShaderDetail_LOW)	// const if-statement compiled out at compile time
	{
		fv = saturate(lerp(0.0f, fv, saturate((adjusted_ndotl - SHADOWMAP_C2)/(SHADOWMAP_C1 - SHADOWMAP_C2))) + (1.0 - cfShadowMapEnabled));
	}

	return fv;
}

/////////////////////////////////////////////////////////////////////////////////////////


float DoShadowCar( const float4 shadow_tex, const float ndotl, int shadowDetail = ShadowShaderDetail_HIGH )
{
	return DoShadow(shadow_tex, ndotl);
}

</file>
  <file id="9" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\ZPrePass_fx.h" time="01c7f8c7-b0dbfa16">/////////////////////////////////////////////////////////////////////////////////////////

struct PS_INPUT_Z
{
	float4 position		: POSITION;
};

PS_INPUT_Z ZPassVertexShader(const VS_INPUT IN)
{
	PS_INPUT_Z OUT;

	OUT.position = mul(IN.position, cmWorldViewProj);

	return OUT;
}

technique ZPrePass &lt;int shader = 1;&gt;
{
	pass p0
	{
		VertexShader		= compile vs_1_1 ZPassVertexShader();
		PixelShader			= NULL;
	}
}

/////////////////////////////////////////////////////////////////////////////////////////
struct PS_INPUT_VERTEX_COLOUR
{
	float4 position			: POSITION;
	float4 color			: COLOR;
};

PS_INPUT_VERTEX_COLOUR VertexShaderVertexColour(	float4 position : POSITION,
													float4 color    : COLOR)
{
	PS_INPUT_VERTEX_COLOUR OUT;

	OUT.position = mul(position, cmWorldViewProj);
	OUT.color	 = color;

	return OUT;
}

float4 PixelShaderVertexColour(const PS_INPUT_VERTEX_COLOUR IN) : COLOR0
{
	return IN.color;
}

technique RenderVertexColour &lt;int shader = 1;&gt;
{
	pass p0
	{
		VertexShader = compile vs_1_1 VertexShaderVertexColour();
		PixelShader  = compile ps_2_0 PixelShaderVertexColour();
	}
}

/////////////////////////////////////////////////////////////////////////////////////////
</file>
  <file id="10" path="D:\eax-build1-s09-xenon\Oban\Speed\Xenon\Src\Render\Shaders\shadowmap_fx.h" time="01c7f8c7-b0ffbd6b">/////////////////////////////////////////////////////////////////////////////////////////
//	Shadow Map Shaders
/////////////////////////////////////////////////////////////////////////////////////////

float4 CalcShadowBias(float4 pos)
{
	float4 Pbias;

	float4 Porig = mul(pos, cmWorldMat);

	Porig.w = 1.0f;

	float4 tmp = mul(Porig, cmShadowMapBiasMatrix); // Porig * M'

	tmp.xy /= tmp.w;

	//tmp.x *= tmp.x;//dot(tmp.xyz, tmp.xyz);
	
	float L_tex = cfShadowMapBiasA + cfShadowMapBiasB * abs(tmp.x);
	
	Pbias.xyz = Porig.xyz + cvLightDirection.xyz * L_tex;

	Pbias = mul(float4(Pbias.xyz,1), cmShadowMapVP);

	//Pbias.x = tmp.x;//L_tex;
	//Pbias = mul(Porig, cmShadowMapVP);
	//Pbias.x = cmShadowMapWVP[0][0];//dot(Pbias.xyz, Pbias.xyz);
	//Pbias.x = (cfShadowMapBiasA);// + cfShadowMapBiasB * L_tex);

	return Pbias;
}


PS_INPUT_LISPSM VertexShaderLiSPSM(const VS_INPUT IN, uniform bool use_matrix_palette)
{
	PS_INPUT_LISPSM OUT;

	float4 position = float4(IN.position.xyz, 1);

// car matrix palette specific
#ifdef CAR_SHADER 
	if (use_matrix_palette)
	{
		int index = IN.color.z * 15.1;

		float4x4 tm = camBlendMatrices[index];

		// clear damage context information
		tm[2].w = 0;
		tm[3].w = 1;

		position = mul(position, tm);
	}
#endif 

	OUT.position = mul(position, cmWorldViewProj);



	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_INPUT_LISPSM_ALPHA VertexShaderLiSPSMAlpha(const VS_INPUT IN)
{
	PS_INPUT_LISPSM_ALPHA OUT;

	float4 position = float4(IN.position.xyz, 1);

	OUT.position = mul(position, cmWorldViewProj);


	OUT.diffuse_tex.xy = IN.tex.xy;

	OUT.diffuse_tex.zw = 1.0f;

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_OUTPUT_LISPSM PixelShaderLiSPSM(const PS_INPUT_LISPSM IN)
{
	PS_OUTPUT_LISPSM OUT;

	OUT.color = 0;

//	OUT.depth = saturate(IN.light_tex.z / IN.light_tex.w);

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_OUTPUT_LISPSM PixelShaderLiSPSMAlpha(const PS_INPUT_LISPSM_ALPHA IN)
{
	PS_OUTPUT_LISPSM OUT;

	OUT.color = 0;

//	OUT.depth = saturate(IN.light_tex.z / IN.light_tex.w);
	
	float4 v_tex = tex2D(DIFFUSE_SAMPLER, IN.diffuse_tex);

	clip( v_tex.w - cfShadowMapAlphaMin );
	
	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

technique RenderLiSPSM &lt;int shader = 1;&gt;
{
    pass p0
    {
		VertexShader = compile vs_1_1 VertexShaderLiSPSM(false);
		PixelShader  = NULL;//compile ps_3_0 PixelShaderLiSPSM();
    }
}

/////////////////////////////////////////////////////////////////////////////////////////

technique RenderLiSPSMMatrixPalette &lt;int shader = 1;&gt;
{
	pass p0
	{
		VertexShader = compile vs_1_1 VertexShaderLiSPSM(true);
		PixelShader  = NULL;//compile ps_3_0 PixelShaderLiSPSM();
	}
}

/////////////////////////////////////////////////////////////////////////////////////////

technique RenderLiSPSMAlphaTex &lt;int shader = 1;&gt;
{
    pass p0
    {
		VertexShader = compile vs_1_1 VertexShaderLiSPSMAlpha();
		PixelShader  = compile ps_3_0 PixelShaderLiSPSMAlpha();
    }
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_INPUT_TSM VertexShaderTSM(const VS_INPUT IN, uniform bool use_matrix_palette)
{
	PS_INPUT_TSM OUT;

	float4 position = float4(IN.position.xyz, 1);

// car matrix palette specific
#ifdef CAR_SHADER 
	if (use_matrix_palette)
	{
		int index = IN.color.z * 15.1;
		position = mul(position, camBlendMatrices[index]);
	}
#endif 


	OUT.position = mul(position, cmWorldViewProj);

	OUT.light_tex = mul(position, cmLightWVP);

//	OUT.position.z = OUT.light_tex.z / OUT.light_tex.w;

//	OUT.position.z *= OUT.position.w;

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_INPUT_TSM_ALPHA VertexShaderTSMAlpha(const VS_INPUT IN)
{
	PS_INPUT_TSM_ALPHA OUT;

	float4 position = float4(IN.position.xyz, 1);

	OUT.position = mul(position, cmWorldViewProj);

	OUT.diffuse_tex.xy = IN.tex.xy;
	OUT.diffuse_tex.zw = 1.0f;

	OUT.light_tex = mul(position, cmLightWVP);

//	OUT.position.z = OUT.light_tex.z / OUT.light_tex.w;

//	OUT.position.z *= OUT.position.w;

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_OUTPUT_TSM PixelShaderTSM(const PS_INPUT_TSM IN)
{
	PS_OUTPUT_TSM	OUT;

	OUT.color = 1.0;

	OUT.depth = IN.light_tex.z / IN.light_tex.w;

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_OUTPUT_TSM PixelShaderTSMAlpha(const PS_INPUT_TSM_ALPHA IN)
{
	PS_OUTPUT_TSM OUT;

	OUT.color = 1.0;
	
	OUT.depth = IN.light_tex.z / IN.light_tex.w;

	//if ( ciShadowMapAlphaEnabled )
	{
		float4 v_tex = tex2D(DIFFUSE_SAMPLER, IN.diffuse_tex);
		clip( v_tex.w - cfShadowMapAlphaMin );
	}

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

technique RenderTSM &lt;int shader = 1;&gt;
{
    pass p0
    {
		VertexShader = compile vs_1_1 VertexShaderTSM(false);
		PixelShader  = compile ps_3_0 PixelShaderTSM();
    }
}

/////////////////////////////////////////////////////////////////////////////////////////

technique RenderTSMMatrixPalette &lt;int shader = 1;&gt;
{
	pass p0
	{
		VertexShader = compile vs_1_1 VertexShaderTSM(true);
		PixelShader  = compile ps_3_0 PixelShaderTSM();
	}
}

/////////////////////////////////////////////////////////////////////////////////////////

technique RenderTSMAlphaTex &lt;int shader = 1;&gt;
{
    pass p0
    {
		VertexShader = compile vs_1_1 VertexShaderTSMAlpha();
		PixelShader  = compile ps_3_0 PixelShaderTSMAlpha();
    }
}
/*
/////////////////////////////////////////////////////////////////////////////////////////

struct PS_INPUT_WORLD
{
	float4 position : POSITION;
};

/////////////////////////////////////////////////////////////////////////////////////////

PS_INPUT_WORLD VertexShaderWorld(const VS_INPUT IN)
{
	PS_INPUT_WORLD OUT;

	OUT.position = mul(IN.position, cmWorldViewProj);

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

struct PS_INPUT_WORLD_TEX
{
	float4 position		: POSITION;
	float2 diffuse_tex	: TEXCOORD0;
};

/////////////////////////////////////////////////////////////////////////////////////////

PS_INPUT_WORLD_TEX VertexShaderWorldTex(const VS_INPUT IN)
{
	PS_INPUT_WORLD_TEX OUT;

	OUT.position	= mul(IN.position, cmWorldViewProj);
	OUT.diffuse_tex	= IN.tex;

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_OUTPUT PixelShaderWhite(const PS_INPUT_WORLD IN)
{
	PS_OUTPUT OUT;

	OUT.color = 1.0f;

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_OUTPUT PixelShaderTexelDensity(const PS_INPUT_WORLD_TEX IN)
{
	PS_OUTPUT OUT;

	OUT.color.x   = fmod( floor( IN.diffuse_tex.x*cfDiffuseMapWidth /10 ), 2 );
	OUT.color.y   = fmod( floor( IN.diffuse_tex.y*cfDiffuseMapHeight/10 ), 2 );
	OUT.color.xyz = fmod( OUT.color.x+OUT.color.y, 2 );
	OUT.color.w   = 1.0f;

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

PS_OUTPUT PixelShaderWhiteAlphaTex( const PS_INPUT_WORLD_TEX IN )
{
	PS_OUTPUT OUT;

	float4	v_tex = tex2D(DIFFUSE_SAMPLER, IN.diffuse_tex);

	// check alpha
	if ( v_tex.w &gt; cfShadowMapAlphaMin )
	{
		OUT.color = ( 1.0f, 1.0f, 1.0f, 1.0f );
	}
	else
	{
		// generate texkill
		float	v_kill = -1.0f;
		clip( v_kill );
	}

	return OUT;
}

/////////////////////////////////////////////////////////////////////////////////////////

technique RenderWhite &lt;int shader = 1;&gt;
{
    pass p0
    {
		VertexShader = compile vs_1_1 VertexShaderWorld();
        PixelShader  = compile ps_3_0 PixelShaderWhite();
    }
}

/////////////////////////////////////////////////////////////////////////////////////////

technique RenderTexelDensity &lt;int shader = 1;&gt;
{
    pass p0
    {
		VertexShader = compile vs_1_1 VertexShaderWorldTex();
        PixelShader  = compile ps_3_0 PixelShaderTexelDensity();
    }
}

/////////////////////////////////////////////////////////////////////////////////////////

technique RenderWhiteAlphaTex &lt;int shader = 1;&gt;
{
    pass p0
    {
		VertexShader = compile vs_1_1 VertexShaderWorldTex();
        PixelShader  = compile ps_3_0 PixelShaderWhiteAlphaTex();
    }
}
*/
/////////////////////////////////////////////////////////////////////////////////////////
</file>
 </files>
 <tool name="FXLite">
  <defines>
   <define name="PLAT_XENON" value="" />
  </defines>
  <arguments>
   <argument name="/Zi" value="false" />
   <argument name="/Vd" value="false" />
   <argument name="/Xu0_deprecated" value="false" />
   <argument name="/Odu_deprecated" value="false" />
   <argument name="/XOd_" value="false" />
   <argument name="/XOu" value="false" />
   <argument name="/Xmaxtempreg" value="0" />
   <argument name="PsSampBase" value="0" />
   <argument name="PsSampCount" value="0" />
   <argument name="VsSampBase" value="0" />
   <argument name="VsSampCount" value="0" />
   <argument name="VsInstCount" value="0" />
   <argument name="PsInstCount" value="0" />
   <argument name="/Od" value="false" />
   <argument name="/Zpr" value="false" />
   <argument name="/Zpc" value="false" />
   <argument name="/Gpp" value="false" />
   <argument name="/Op" value="false" />
   <argument name="/Gfa" value="false" />
   <argument name="/Gfp" value="false" />
   <argument name="/XZc:zeroInit" value="false" />
   <argument name="/XVe" value="false" />
   <argument name="/Xbe:3-" value="false" />
   <argument name="/Xbe:1-" value="false" />
   <argument name="/XQInomaskedexports" value="false" />
   <argument name="/XOautoz" value="false" />
   <argument name="/XfxAv" value="false" />
   <argument name="/XfxAs" value="false" />
   <argument name="/XfxPv" value="false" />
  </arguments>
 </tool>
 <shaders>
  <shader entrypoint="PixelShaderTSMAlpha" target="ps_3_0" FxlTechniqueName="main" FxlTechnique="9" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0000-6b553547-cf76c564">
   <constanttable>
    <constant register="s0">
     <type name="ROADBASE_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="c144">
     <type name="cvShadowParams0" class="vector" type="float" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="2" file="10" line="220" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="10" line="220" scope="-1" lastinstruction="0" />
    <statement pc="3" file="10" line="221" scope="-1" lastinstruction="0" />
    <statement pc="4" file="10" line="221" scope="-1" lastinstruction="0" />
    <statement pc="5" file="10" line="224" scope="-1" lastinstruction="0" />
    <statement pc="6" file="10" line="216" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
    <Interpolator Register="1" Semantic="0x51" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="255" value0="1" value1="0" value2="0" value3="0" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VertexShaderTSMAlpha" target="vs_3_0" FxlTechniqueName="main" FxlTechnique="9" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0001-6b553547-cf76c564">
   <constanttable>
    <constant register="c20" count="4">
     <type name="cmLightWVP" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="10" line="175" scope="-1" lastinstruction="0" />
    <statement pc="4" file="10" line="175" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="10" line="175" scope="-1" lastinstruction="0" />
    <statement pc="5" file="10" line="181" scope="-1" lastinstruction="0" />
    <statement pc="6" file="10" line="181" scope="-1" lastinstruction="0" />
    <statement pc="7" file="10" line="181" scope="-1" lastinstruction="0" />
    <statement pc="8" file="10" line="181" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="10" line="181" scope="-1" lastinstruction="0" />
    <statement pc="9" file="10" line="192" scope="-1" lastinstruction="0" />
    <statement pc="10" file="10" line="186" scope="-1" lastinstruction="0" />
    <statement pc="11" file="10" line="186" scope="-1" lastinstruction="0" />
    <statement pc="12" file="10" line="186" scope="-1" lastinstruction="0" />
    <statement pc="13" file="10" line="186" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="1" DestSwizzle="xyz1" Semantic="0x00" End="false" />
    <vfetch Address="4" Register="0" DestSwizzle="xy1_" Semantic="0x50" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
    <Interpolator Register="1" Semantic="0x51" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PixelShaderTSM" target="ps_3_0" FxlTechniqueName="lowlod" FxlTechnique="8" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0002-6b553547-cf76c564">
   <constanttable>
   </constanttable>
   <sourcemap>
    <statement pc="1" file="10" line="203" scope="-1" lastinstruction="0" />
    <statement pc="2" file="10" line="205" scope="-1" lastinstruction="0" />
    <statement pc="3" file="10" line="203" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x51" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="255" value0="1" value1="0" value2="0" value3="0" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VertexShaderTSM" target="vs_3_0" FxlTechniqueName="lowlod" FxlTechnique="8" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0003-6b553547-cf76c564">
   <constanttable>
    <constant register="c20" count="4">
     <type name="cmLightWVP" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="10" line="146" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="10" line="146" scope="-1" lastinstruction="0" />
    <statement pc="4" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="5" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="6" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="7" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="8" file="10" line="164" scope="-1" lastinstruction="0" />
    <statement pc="9" file="10" line="164" scope="-1" lastinstruction="0" />
    <statement pc="10" file="10" line="164" scope="-1" lastinstruction="0" />
    <statement pc="11" file="10" line="164" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="0" DestSwizzle="xyz1" Semantic="0x00" End="false" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x51" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PixelShaderTSM" target="ps_3_0" FxlTechniqueName="ZPrePass" FxlTechnique="7" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0004-6b553547-cf76c564">
   <constanttable>
   </constanttable>
   <sourcemap>
    <statement pc="1" file="10" line="203" scope="-1" lastinstruction="0" />
    <statement pc="2" file="10" line="205" scope="-1" lastinstruction="0" />
    <statement pc="3" file="10" line="203" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x51" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="255" value0="1" value1="0" value2="0" value3="0" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VertexShaderTSM" target="vs_3_0" FxlTechniqueName="ZPrePass" FxlTechnique="7" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0005-6b553547-cf76c564">
   <constanttable>
    <constant register="c20" count="4">
     <type name="cmLightWVP" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="10" line="146" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="10" line="146" scope="-1" lastinstruction="0" />
    <statement pc="4" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="5" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="6" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="7" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="10" line="162" scope="-1" lastinstruction="0" />
    <statement pc="8" file="10" line="164" scope="-1" lastinstruction="0" />
    <statement pc="9" file="10" line="164" scope="-1" lastinstruction="0" />
    <statement pc="10" file="10" line="164" scope="-1" lastinstruction="0" />
    <statement pc="11" file="10" line="164" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="0" DestSwizzle="xyz1" Semantic="0x00" End="false" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x51" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PixelShaderLiSPSMAlpha" target="ps_3_0" FxlTechniqueName="RenderVertexColour" FxlTechnique="6" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0006-6b553547-cf76c564">
   <constanttable>
    <constant register="s0">
     <type name="ROADBASE_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="c144">
     <type name="cvShadowParams0" class="vector" type="float" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="2" file="10" line="104" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="10" line="104" scope="-1" lastinstruction="0" />
    <statement pc="3" file="10" line="106" scope="-1" lastinstruction="0" />
    <statement pc="4" file="10" line="106" scope="-1" lastinstruction="0" />
    <statement pc="5" file="10" line="108" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="255" value0="0" value1="0" value2="0" value3="0" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VertexShaderLiSPSMAlpha" target="vs_3_0" FxlTechniqueName="RenderVertexColour" FxlTechnique="6" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0007-6b553547-cf76c564">
   <constanttable>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="10" line="65" scope="-1" lastinstruction="0" />
    <statement pc="4" file="10" line="65" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="10" line="65" scope="-1" lastinstruction="0" />
    <statement pc="5" file="10" line="71" scope="-1" lastinstruction="0" />
    <statement pc="6" file="10" line="71" scope="-1" lastinstruction="0" />
    <statement pc="7" file="10" line="71" scope="-1" lastinstruction="0" />
    <statement pc="8" file="10" line="71" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="10" line="71" scope="-1" lastinstruction="0" />
    <statement pc="9" file="10" line="78" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="1" DestSwizzle="xyz1" Semantic="0x00" End="false" />
    <vfetch Address="4" Register="0" DestSwizzle="xy1_" Semantic="0x50" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VertexShaderLiSPSM" target="vs_3_0" FxlTechniqueName="RenderLiSPSM" FxlTechnique="5" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0008-6b553547-cf76c564">
   <constanttable>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="10" line="34" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="10" line="34" scope="-1" lastinstruction="0" />
    <statement pc="4" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="5" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="6" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="7" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="2.0" file="10" line="60" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="0" DestSwizzle="xyz1" Semantic="0x00" End="false" />
   </VfetchInfo>
   <InterpolatorInfo>
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VertexShaderLiSPSM" target="vs_3_0" FxlTechniqueName="RenderLiSPSMMatrixPalette" FxlTechnique="4" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0009-6b553547-cf76c564">
   <constanttable>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="10" line="34" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="10" line="34" scope="-1" lastinstruction="0" />
    <statement pc="4" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="5" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="6" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="7" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="10" line="56" scope="-1" lastinstruction="0" />
    <statement pc="2.0" file="10" line="60" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="0" DestSwizzle="xyz1" Semantic="0x00" End="false" />
   </VfetchInfo>
   <InterpolatorInfo>
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PixelShaderVertexColour" target="ps_3_0" FxlTechniqueName="RenderLiSPSMAlphaTex" FxlTechnique="3" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a000a-6b553547-cf76c564">
   <constanttable>
   </constanttable>
   <sourcemap>
    <statement pc="1" file="9" line="46" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0xa0" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VertexShaderVertexColour" target="vs_3_0" FxlTechniqueName="RenderLiSPSMAlphaTex" FxlTechnique="3" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a000b-6b553547-cf76c564">
   <constanttable>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="9" line="33" scope="-1" lastinstruction="0" />
    <statement pc="4" file="9" line="33" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="9" line="33" scope="-1" lastinstruction="0" />
    <statement pc="5" file="9" line="38" scope="-1" lastinstruction="0" />
    <statement pc="6" file="9" line="38" scope="-1" lastinstruction="0" />
    <statement pc="7" file="9" line="38" scope="-1" lastinstruction="0" />
    <statement pc="8" file="9" line="38" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="9" line="38" scope="-1" lastinstruction="0" />
    <statement pc="9" file="9" line="41" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="1" DestSwizzle="xyzw" Semantic="0x00" End="false" />
    <vfetch Address="4" Register="0" DestSwizzle="xyzw" Semantic="0xa0" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0xa0" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="ZPassVertexShader" target="vs_3_0" FxlTechniqueName="RenderTSM" FxlTechnique="2" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a000c-6b553547-cf76c564">
   <constanttable>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="9" line="8" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="9" line="8" scope="-1" lastinstruction="0" />
    <statement pc="4" file="9" line="12" scope="-1" lastinstruction="0" />
    <statement pc="5" file="9" line="12" scope="-1" lastinstruction="0" />
    <statement pc="6" file="9" line="12" scope="-1" lastinstruction="0" />
    <statement pc="7" file="9" line="12" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="9" line="12" scope="-1" lastinstruction="0" />
    <statement pc="2.0" file="9" line="14" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="0" DestSwizzle="xyzw" Semantic="0x00" End="false" />
   </VfetchInfo>
   <InterpolatorInfo>
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PixelShaderLowLOD" target="ps_3_0" FxlTechniqueName="RenderTSMMatrixPalette" FxlTechnique="1" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a000d-6b553547-cf76c564">
   <constanttable>
    <constant register="s0">
     <type name="ROADBASE_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="c216">
     <type name="cvVertexPowerBrightness" class="vector" type="float" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="2" file="0" line="59" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="0" line="59" scope="-1" lastinstruction="0" />
    <statement pc="3" file="0" line="62" scope="-1" lastinstruction="0" />
    <statement pc="4" file="2" line="54" scope="-1" lastinstruction="0" />
    <statement pc="5" file="2" line="54" scope="-1" lastinstruction="0" />
    <statement pc="6" file="2" line="54" scope="-1" lastinstruction="0" />
    <statement pc="7" file="2" line="54" scope="-1" lastinstruction="0" />
    <statement pc="8" file="2" line="54" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xy" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="255" value0="1" value1="0" value2="0" value3="0" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VertexShaderLowLOD" target="vs_3_0" FxlTechniqueName="RenderTSMMatrixPalette" FxlTechnique="1" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a000e-6b553547-cf76c564">
   <constanttable>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
    <constant register="c137">
     <type name="cvScreenOffset" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c161">
     <type name="cvTextureOffset" class="vector" type="float" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="3" file="0" line="47" scope="-1" lastinstruction="0" />
    <statement pc="4" file="0" line="47" scope="-1" lastinstruction="0" />
    <statement pc="0.1" file="0" line="47" scope="-1" lastinstruction="0" />
    <statement pc="5" file="2" line="20" scope="-1" lastinstruction="0" />
    <statement pc="6" file="2" line="20" scope="-1" lastinstruction="0" />
    <statement pc="7" file="2" line="21" scope="-1" lastinstruction="0" />
    <statement pc="8" file="2" line="21" scope="-1" lastinstruction="0" />
    <statement pc="9" file="2" line="21" scope="-1" lastinstruction="0" />
    <statement pc="10" file="0" line="53" scope="-1" lastinstruction="0" />
    <statement pc="1.1" file="0" line="53" scope="-1" lastinstruction="0" />
    <statement pc="11" file="0" line="51" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="3" Register="2" DestSwizzle="xyzw" Semantic="0x00" End="false" />
    <vfetch Address="4" Register="0" DestSwizzle="xy__" Semantic="0x50" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0x50" Mask="xy" />
   </InterpolatorInfo>
   <LiteralFloats>
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="PixelShaderMain" target="ps_3_0" FxlTechniqueName="RenderTSMAlphaTex" FxlTechnique="0" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a000f-6b553547-cf76c564">
   <constanttable>
    <constant register="s0">
     <type name="ROADBASE_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="s2">
     <type name="ROADDAMAGE_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="s1">
     <type name="ROADELEMENTS_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="s3">
     <type name="SHADOWMAP_SAMPLER" class="object" type="sampler2D" />
    </constant>
    <constant register="c213">
     <type name="cfShadowMapEnabled" class="scalar" type="float" />
    </constant>
    <constant register="c120">
     <type name="cfSpecularPower" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c207">
     <type name="cvFogColour" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c33">
     <type name="cvLocalLightVec" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c145">
     <type name="cvShadowParams1" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c149">
     <type name="cvSpecularColour" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c80">
     <type name="cvWorldAmbientColour" class="vector" type="float" columns="3" />
    </constant>
    <constant register="c79">
     <type name="cvWorldSunColour" class="vector" type="float" columns="3" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="8" file="1" line="248" scope="-1" lastinstruction="0" />
    <statement pc="9" file="1" line="248" scope="-1" lastinstruction="0" />
    <statement pc="10" file="8" line="146" scope="-1" lastinstruction="0" />
    <statement pc="11" file="8" line="146" scope="-1" lastinstruction="0" />
    <statement pc="12" file="1" line="292" scope="-1" lastinstruction="0" />
    <statement pc="13" file="1" line="292" scope="-1" lastinstruction="0" />
    <statement pc="14" file="1" line="254" scope="-1" lastinstruction="0" />
    <statement pc="15" file="1" line="240" scope="-1" lastinstruction="0" />
    <statement pc="16" file="1" line="240" scope="-1" lastinstruction="0" />
    <statement pc="17" file="1" line="239" scope="-1" lastinstruction="0" />
    <statement pc="18" file="8" line="162" scope="-1" lastinstruction="0" />
    <statement pc="19" file="8" line="162" scope="-1" lastinstruction="0" />
    <statement pc="20" file="8" line="162" scope="-1" lastinstruction="0" />
    <statement pc="21" file="8" line="162" scope="-1" lastinstruction="0" />
    <statement pc="22" file="8" line="162" scope="-1" lastinstruction="0" />
    <statement pc="23" file="8" line="162" scope="-1" lastinstruction="0" />
    <statement pc="24" file="8" line="162" scope="-1" lastinstruction="0" />
    <statement pc="25" file="8" line="162" scope="-1" lastinstruction="0" />
    <statement pc="26" file="8" line="162" scope="-1" lastinstruction="0" />
    <statement pc="27" file="1" line="239" scope="-1" lastinstruction="0" />
    <statement pc="28" file="8" line="237" scope="-1" lastinstruction="0" />
    <statement pc="29" file="1" line="282" scope="-1" lastinstruction="0" />
    <statement pc="30" file="8" line="232" scope="-1" lastinstruction="0" />
    <statement pc="31" file="1" line="254" scope="-1" lastinstruction="0" />
    <statement pc="32" file="1" line="282" scope="-1" lastinstruction="0" />
    <statement pc="33" file="1" line="282" scope="-1" lastinstruction="0" />
    <statement pc="34" file="8" line="237" scope="-1" lastinstruction="0" />
    <statement pc="35" file="8" line="197" scope="-1" lastinstruction="0" />
    <statement pc="36" file="8" line="196" scope="-1" lastinstruction="0" />
    <statement pc="37" file="8" line="197" scope="-1" lastinstruction="0" />
    <statement pc="38" file="8" line="200" scope="-1" lastinstruction="0" />
    <statement pc="39" file="8" line="200" scope="-1" lastinstruction="0" />
    <statement pc="40" file="8" line="200" scope="-1" lastinstruction="0" />
    <statement pc="41" file="8" line="200" scope="-1" lastinstruction="0" />
    <statement pc="42" file="8" line="199" scope="-1" lastinstruction="0" />
    <statement pc="43" file="8" line="200" scope="-1" lastinstruction="0" />
    <statement pc="44" file="8" line="201" scope="-1" lastinstruction="0" />
    <statement pc="45" file="8" line="250" scope="-1" lastinstruction="0" />
    <statement pc="46" file="1" line="284" scope="-1" lastinstruction="0" />
    <statement pc="47" file="1" line="294" scope="-1" lastinstruction="0" />
    <statement pc="48" file="1" line="294" scope="-1" lastinstruction="0" />
    <statement pc="49" file="1" line="296" scope="-1" lastinstruction="0" />
    <statement pc="50" file="1" line="296" scope="-1" lastinstruction="0" />
    <statement pc="51" file="1" line="296" scope="-1" lastinstruction="0" />
    <statement pc="52" file="1" line="323" scope="-1" lastinstruction="0" />
    <statement pc="53" file="6" line="90" scope="-1" lastinstruction="0" />
    <statement pc="54" file="1" line="297" scope="-1" lastinstruction="0" />
    <statement pc="55" file="1" line="297" scope="-1" lastinstruction="0" />
    <statement pc="56" file="6" line="90" scope="-1" lastinstruction="0" />
    <statement pc="57" file="6" line="174" scope="-1" lastinstruction="0" />
    <statement pc="58" file="6" line="181" scope="-1" lastinstruction="0" />
    <statement pc="59" file="6" line="90" scope="-1" lastinstruction="0" />
    <statement pc="60" file="6" line="92" scope="-1" lastinstruction="0" />
    <statement pc="61" file="6" line="192" scope="-1" lastinstruction="0" />
    <statement pc="62" file="6" line="94" scope="-1" lastinstruction="0" />
    <statement pc="63" file="6" line="171" scope="-1" lastinstruction="0" />
    <statement pc="64" file="6" line="94" scope="-1" lastinstruction="0" />
    <statement pc="65" file="6" line="184" scope="-1" lastinstruction="0" />
    <statement pc="66" file="6" line="178" scope="-1" lastinstruction="0" />
    <statement pc="67" file="6" line="96" scope="-1" lastinstruction="0" />
    <statement pc="68" file="6" line="98" scope="-1" lastinstruction="0" />
    <statement pc="69" file="6" line="188" scope="-1" lastinstruction="0" />
    <statement pc="70" file="6" line="188" scope="-1" lastinstruction="0" />
    <statement pc="71" file="6" line="98" scope="-1" lastinstruction="0" />
    <statement pc="72" file="6" line="98" scope="-1" lastinstruction="0" />
    <statement pc="73" file="6" line="192" scope="-1" lastinstruction="0" />
    <statement pc="74" file="6" line="192" scope="-1" lastinstruction="0" />
    <statement pc="75" file="5" line="56" scope="-1" lastinstruction="0" />
    <statement pc="76" file="2" line="54" scope="-1" lastinstruction="0" />
    <statement pc="77" file="2" line="54" scope="-1" lastinstruction="0" />
    <statement pc="78" file="2" line="54" scope="-1" lastinstruction="0" />
    <statement pc="79" file="2" line="54" scope="-1" lastinstruction="0" />
    <statement pc="80" file="2" line="54" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0xa0" Mask="xyz" />
    <Interpolator Register="1" Semantic="0x50" Mask="xyzw" />
    <Interpolator Register="2" Semantic="0x51" Mask="xyz" />
    <Interpolator Register="3" Semantic="0x52" Mask="xyzw" />
    <Interpolator Register="4" Semantic="0x53" Mask="xyz" />
    <Interpolator Register="5" Semantic="0x54" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="248" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="249" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="250" value0="0.40000001" value1="0" value2="0" value3="0" />
    <Float Register="251" value0="2" value1="0.60000002" value2="0.2" value3="0.83333331" />
    <Float Register="252" value0="0.69999999" value1="1" value2="0.11111111" value3="10" />
    <Float Register="253" value0="0.050000001" value1="1.5" value2="-0.5" value3="0.5" />
    <Float Register="254" value0="-4" value1="-3" value2="-1" value3="0.1" />
    <Float Register="255" value0="0.11" value1="0.30000001" value2="0.58999997" value3="-0.95999998" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
  <shader entrypoint="VertexShaderMain" target="vs_3_0" FxlTechniqueName="RenderTSMAlphaTex" FxlTechnique="0" FxlPassName="p0" FxlPass="0" ZPass="0" pdbHint="4e4a0010-6b553547-cf76c564">
   <constanttable>
    <constant register="c81">
     <type name="cafPcaMean" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c82">
     <type name="cavPcaWeightsR" class="vector" type="float" columns="4" elements="2" />
    </constant>
    <constant register="c240">
     <type name="cfFogEnable" class="scalar" type="float" />
    </constant>
    <constant register="c16" count="4">
     <type name="cmShadowMapWVP" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
    <constant register="c24" count="4">
     <type name="cmWorldViewProj" class="matrix_columns" type="float" rows="4" columns="4" />
    </constant>
    <constant register="c206">
     <type name="cvFogValue" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c32">
     <type name="cvLocalEyePos" class="vector" type="float" columns="3" />
    </constant>
    <constant register="c33">
     <type name="cvLocalLightVec" class="vector" type="float" columns="4" />
    </constant>
    <constant register="c137">
     <type name="cvScreenOffset" class="vector" type="float" columns="4" />
    </constant>
   </constanttable>
   <sourcemap>
    <statement pc="5" file="0" line="5" scope="-1" lastinstruction="0" />
    <statement pc="6" file="0" line="5" scope="-1" lastinstruction="0" />
    <statement pc="7" file="0" line="5" scope="-1" lastinstruction="0" />
    <statement pc="8" file="0" line="5" scope="-1" lastinstruction="0" />
    <statement pc="9" file="0" line="5" scope="-1" lastinstruction="0" />
    <statement pc="10" file="0" line="5" scope="-1" lastinstruction="0" />
    <statement pc="11" file="0" line="5" scope="-1" lastinstruction="0" />
    <statement pc="1.0" file="0" line="5" scope="-1" lastinstruction="0" />
    <statement pc="12" file="5" line="29" scope="-1" lastinstruction="0" />
    <statement pc="13" file="2" line="20" scope="-1" lastinstruction="0" />
    <statement pc="14" file="2" line="21" scope="-1" lastinstruction="0" />
    <statement pc="15" file="2" line="21" scope="-1" lastinstruction="0" />
    <statement pc="16" file="2" line="21" scope="-1" lastinstruction="0" />
    <statement pc="17" file="0" line="7" scope="-1" lastinstruction="0" />
    <statement pc="2.0" file="0" line="7" scope="-1" lastinstruction="0" />
    <statement pc="18" file="1" line="213" scope="-1" lastinstruction="0" />
    <statement pc="19" file="8" line="110" scope="-1" lastinstruction="0" />
    <statement pc="20" file="8" line="110" scope="-1" lastinstruction="0" />
    <statement pc="21" file="7" line="25" scope="-1" lastinstruction="0" />
    <statement pc="22" file="7" line="25" scope="-1" lastinstruction="0" />
    <statement pc="23" file="8" line="110" scope="-1" lastinstruction="0" />
    <statement pc="24" file="5" line="29" scope="-1" lastinstruction="0" />
    <statement pc="25" file="5" line="30" scope="-1" lastinstruction="0" />
    <statement pc="26" file="8" line="110" scope="-1" lastinstruction="0" />
    <statement pc="27" file="5" line="30" scope="-1" lastinstruction="0" />
    <statement pc="28" file="0" line="7" scope="-1" lastinstruction="0" />
    <statement pc="29" file="0" line="7" scope="-1" lastinstruction="0" />
    <statement pc="30" file="1" line="204" scope="-1" lastinstruction="0" />
    <statement pc="31" file="0" line="7" scope="-1" lastinstruction="0" />
    <statement pc="32" file="1" line="209" scope="-1" lastinstruction="0" />
    <statement pc="33" file="5" line="35" scope="-1" lastinstruction="0" />
    <statement pc="34" file="8" line="118" scope="-1" lastinstruction="0" />
    <statement pc="35" file="8" line="118" scope="-1" lastinstruction="0" />
    <statement pc="36" file="8" line="119" scope="-1" lastinstruction="0" />
    <statement pc="37" file="5" line="39" scope="-1" lastinstruction="0" />
    <statement pc="38" file="5" line="39" scope="-1" lastinstruction="0" />
    <statement pc="39" file="5" line="39" scope="-1" lastinstruction="0" />
    <statement pc="40" file="0" line="7" scope="-1" lastinstruction="0" />
   </sourcemap>
   <variables>
   </variables>
   <variableDebugInfo>
   </variableDebugInfo>
   <scopes>
   </scopes>
   <funcInfo>
    <function id="0" name="PixelShaderTSMAlpha" retID="339">
     <parameter id="338" />
    </function>
    <function id="1" name="PixelShaderTSM" retID="336">
     <parameter id="335" />
    </function>
    <function id="2" name="VertexShaderTSMAlpha" retID="332">
     <parameter id="331" />
    </function>
    <function id="3" name="VertexShaderTSM" retID="328">
     <parameter id="326" />
     <parameter id="327" />
    </function>
    <function id="4" name="PixelShaderLiSPSMAlpha" retID="320">
     <parameter id="319" />
    </function>
    <function id="5" name="PixelShaderLiSPSM" retID="317">
     <parameter id="316" />
    </function>
    <function id="6" name="VertexShaderLiSPSMAlpha" retID="313">
     <parameter id="312" />
    </function>
    <function id="7" name="VertexShaderLiSPSM" retID="309">
     <parameter id="307" />
     <parameter id="308" />
    </function>
    <function id="8" name="CalcShadowBias" retID="302">
     <parameter id="301" />
    </function>
    <function id="9" name="PixelShaderVertexColour" retID="299">
     <parameter id="298" />
    </function>
    <function id="10" name="VertexShaderVertexColour" retID="296">
     <parameter id="294" />
     <parameter id="295" />
    </function>
    <function id="11" name="ZPassVertexShader" retID="288">
     <parameter id="287" />
    </function>
    <function id="12" name="PixelShaderLowLOD" retID="283">
     <parameter id="282" />
    </function>
    <function id="13" name="VertexShaderLowLOD" retID="280">
     <parameter id="279" />
    </function>
    <function id="14" name="PixelShaderMain" retID="270">
     <parameter id="269" />
    </function>
    <function id="15" name="VertexShaderMain" retID="268">
     <parameter id="267" />
    </function>
    <function id="16" name="RoadPixelShader" retID="250">
     <parameter id="248" />
     <parameter id="249" />
     <parameter id="0" />
    </function>
    <function id="17" name="RoadVertexShader" retID="246">
     <parameter id="245" />
    </function>
    <function id="18" name="DoShadowCar" retID="244">
     <parameter id="241" />
     <parameter id="242" />
     <parameter id="243" />
     <parameter id="0" />
    </function>
    <function id="19" name="DoShadowOptimized" retID="236">
     <parameter id="232" />
     <parameter id="233" />
     <parameter id="234" />
     <parameter id="235" />
     <parameter id="0" />
    </function>
    <function id="20" name="DoShadow" retID="225">
     <parameter id="222" />
     <parameter id="223" />
     <parameter id="224" />
     <parameter id="0" />
    </function>
    <function id="21" name="DoShadowPCFDepth" retID="216">
     <parameter id="212" />
     <parameter id="213" />
     <parameter id="214" />
     <parameter id="215" />
    </function>
    <function id="22" name="Tex2DOffset" retID="208">
     <parameter id="205" />
     <parameter id="206" />
     <parameter id="207" />
    </function>
    <function id="23" name="GetShadowMapTexCoord" retID="203">
     <parameter id="202" />
    </function>
    <function id="24" name="VertexShadowPosView" retID="201">
     <parameter id="200" />
    </function>
    <function id="25" name="VertexShadowTexOptimized" retID="197">
     <parameter id="194" />
     <parameter id="195" />
     <parameter id="196" />
    </function>
    <function id="26" name="VertexShadowTex" retID="193">
     <parameter id="192" />
    </function>
    <function id="27" name="PcaDecompressAmbientOcclusion" retID="142">
     <parameter id="141" />
    </function>
    <function id="28" name="PcaDecompressAmbientOcclusion" retID="139">
     <parameter id="137" />
     <parameter id="138" />
    </function>
    <function id="29" name="GranitoLightingModelVertexShader" retID="130">
     <parameter id="128" />
     <parameter id="129" />
    </function>
    <function id="30" name="GranitoLightingModelLite" retID="122">
     <parameter id="119" />
     <parameter id="120" />
     <parameter id="121" />
    </function>
    <function id="31" name="GranitoLightingModel" retID="113">
     <parameter id="108" />
     <parameter id="109" />
     <parameter id="110" />
     <parameter id="111" />
     <parameter id="112" />
    </function>
    <function id="32" name="BlinnPhongSpecChars" retID="105">
     <parameter id="99" />
     <parameter id="100" />
     <parameter id="101" />
     <parameter id="102" />
     <parameter id="103" />
     <parameter id="104" />
    </function>
    <function id="33" name="BlinnPhongSpec" retID="96">
     <parameter id="92" />
     <parameter id="93" />
     <parameter id="94" />
     <parameter id="95" />
    </function>
    <function id="34" name="BlinnPhongSpecRoad" retID="86">
     <parameter id="83" />
     <parameter id="84" />
     <parameter id="85" />
    </function>
    <function id="35" name="Blinn" retID="71">
     <parameter id="65" />
     <parameter id="66" />
     <parameter id="67" />
     <parameter id="68" />
     <parameter id="69" />
     <parameter id="70" />
    </function>
    <function id="36" name="CalcPostProcessFog" retID="52">
     <parameter id="50" />
     <parameter id="51" />
    </function>
    <function id="37" name="CalcFogColour" retID="49">
     <parameter id="47" />
     <parameter id="48" />
    </function>
    <function id="38" name="CalcVertexFog" retID="40">
     <parameter id="39" />
    </function>
    <function id="39" name="DecodeRGBE8" retID="24">
     <parameter id="23" />
    </function>
    <function id="40" name="EncodeRGBE8" retID="19">
     <parameter id="18" />
    </function>
    <function id="41" name="DeCompressColourSpace" retID="17">
     <parameter id="16" />
    </function>
    <function id="42" name="CompressColourSpace" retID="15">
     <parameter id="14" />
    </function>
    <function id="43" name="ScaleHeadLightIntensity" retID="12">
     <parameter id="11" />
    </function>
    <function id="44" name="CalcVertexColour" retID="9">
     <parameter id="8" />
    </function>
    <function id="45" name="screen_position" retID="7">
     <parameter id="6" />
    </function>
    <function id="46" name="world_position" retID="4">
     <parameter id="3" />
    </function>
   </funcInfo>
   <funcEntryExitInfo>
   </funcEntryExitInfo>
   <VfetchInfo>
    <vfetch Address="5" Register="5" DestSwizzle="xyzw" Semantic="0x00" End="false" />
    <vfetch Address="6" Register="2" DestSwizzle="w___" Semantic="0xa0" End="false" />
    <vfetch Address="7" Register="6" DestSwizzle="xyz_" Semantic="0x30" End="false" />
    <vfetch Address="8" Register="7" DestSwizzle="xy__" Semantic="0x50" End="false" />
    <vfetch Address="9" Register="7" DestSwizzle="__xy" Semantic="0x51" End="false" />
    <vfetch Address="10" Register="1" DestSwizzle="xy__" Semantic="0x52" End="false" />
    <vfetch Address="11" Register="4" DestSwizzle="xyzw" Semantic="0x53" End="true" />
   </VfetchInfo>
   <InterpolatorInfo>
    <Interpolator Register="0" Semantic="0xa0" Mask="xyz" />
    <Interpolator Register="1" Semantic="0x50" Mask="xyzw" />
    <Interpolator Register="2" Semantic="0x51" Mask="xyz" />
    <Interpolator Register="3" Semantic="0x52" Mask="xyzw" />
    <Interpolator Register="4" Semantic="0x53" Mask="xyz" />
    <Interpolator Register="5" Semantic="0x54" Mask="xyzw" />
   </InterpolatorInfo>
   <LiteralFloats>
    <Float Register="252" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="253" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="254" value0="0" value1="0" value2="0" value3="0" />
    <Float Register="255" value0="2.2" value1="1" value2="0.0039215689" value3="0" />
   </LiteralFloats>
   <LiteralInts>
   </LiteralInts>
   <LiteralBools>
   </LiteralBools>
  </shader>
 </shaders>
</shader-pdb>
